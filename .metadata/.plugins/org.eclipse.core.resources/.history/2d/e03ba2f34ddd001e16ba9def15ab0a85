/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include "main.h"
#include <stdio.h>
#include <stdint.h>

int main(void)
{
	RCC_AHB1ENR_t volatile *const pClkCtrl = (RCC_AHB1ENR_t *) 0x40023800;
	pClkCtrl->gpioDen = 1;

	GPIOx_MODER_t volatile *const pPortModeReg = (GPIOx_MODER_t *) 0x40020C00;
	pPortModeReg->mode0 = 0x01; //Row 1
	pPortModeReg->mode1 = 0x01; //Row 2
	pPortModeReg->mode2 = 0x01; //Row 3
	pPortModeReg->mode3 = 0x01;	//Row 4

	pPortModeReg->mode8 = 0x00;	//Column 1
	pPortModeReg->mode9 = 0x00;	//Column 2
	pPortModeReg->mode10 = 0x00;//Column 3
	pPortModeReg->mode11 = 0x00;//Column 4

	GPIOx_ODR_t volatile *const pPortOutDataReg = (GPIOx_ODR_t *) 0x40020C00 + 0x14;
	pPortOutDataReg->odr0 = 0x1;
	pPortOutDataReg->odr1 = 0x1;
	pPortOutDataReg->odr2 = 0x1;
	pPortOutDataReg->odr3 = 0x1;

	GPIOx_IDR_t volatile *const pPortInputReg = (GPIOx_IDR_t *) 0x40020C00 + 0x10;

	while(1)
	{
		//ROW 1
		pPortOutDataReg->mode0 = 0x0;
		if(((pPortInputReg->odr8) & 0x01) == 0x0)
			printf("Pressed key 1");
		if(((pPortInputReg->odr9) & 0x01) == 0x0)
			printf("Pressed key 2");
		if(((pPortInputReg->odr10) & 0x01) == 0x0)
			printf("Pressed key 3");
		if(((pPortInputReg->odr11) & 0x01) == 0x0)
			printf("Pressed key A");

		//ROW 2
		pPortOutDataRe->mode0 = 0x1;
		pPortOutDataRe->mode1 = 0x0;
		if(((pPortInputReg->odr8) & 0x01) == 0x0)
			printf("Pressed key 4");
		if(((pPortInputReg->odr9) & 0x01) == 0x0)
			printf("Pressed key 5");
		if(((pPortInputReg->odr10) & 0x01) == 0x0)
			printf("Pressed key 6");
		if(((pPortInputReg->odr11) & 0x01) == 0x0)
			printf("Pressed key B");

		//ROW3
		pPortOutDataRe->mode1 = 0x1;
		pPortOutDataRe->mode2 = 0x0;
		if(((pPortInputReg->odr8) & 0x01) == 0x0)
			printf("Pressed key 7");
		if(((pPortInputReg->odr9) & 0x01) == 0x0)
			printf("Pressed key 8");
		if(((pPortInputReg->odr10) & 0x01) == 0x0)
			printf("Pressed key 9");
		if(((pPortInputReg->odr11) & 0x01) == 0x0)
			printf("Pressed key D");

		//ROW4
		pPortOutDataRe->mode2 = 0x1;
		pPortOutDataRe->mode3 = 0x0;
		if(((pPortInputReg->odr8) & 0x01) == 0x0)
			printf("Pressed key *");
		if(((pPortInputReg->odr9) & 0x01) == 0x0)
			printf("Pressed key 0");
		if(((pPortInputReg->odr10) & 0x01) == 0x0)
			printf("Pressed key #");
		if(((pPortInputReg->odr11) & 0x01) == 0x0)
			printf("Pressed key D");

	}

}
