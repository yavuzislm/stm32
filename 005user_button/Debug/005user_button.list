
005user_button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001270  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  08001410  08001410  00011410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800145c  0800145c  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  0800145c  0800145c  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800145c  0800145c  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800145c  0800145c  0001145c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001460  08001460  00011460  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  08001464  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  20000074  080014d8  00020074  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001e8  080014d8  000201e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200a4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a22  00000000  00000000  000200e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000359  00000000  00000000  00020b09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00020e68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000ca  00000000  00000000  00020f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c9b  00000000  00000000  0002105a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014ad  00000000  00000000  00023cf5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000985c  00000000  00000000  000251a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b4c  00000000  00000000  0002ea00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  0002f54c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000074 	.word	0x20000074
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080013f8 	.word	0x080013f8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000078 	.word	0x20000078
 80001dc:	080013f8 	.word	0x080013f8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
uint32_t volatile *pEXTTIEdgeCtrlReg		= (uint32_t*) (0x40013C00 + 0x08);
uint32_t volatile *pNVICIRQEnReg 			= (uint32_t*) 0xE000E100;


int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
	button_init();
 8000286:	f000 f839 	bl	80002fc <button_init>

	while(1)
	{
		//Disable interrupt
		*pEXTIMaskReg &= ~( 1 << 0);
 800028a:	4b17      	ldr	r3, [pc, #92]	; (80002e8 <main+0x68>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	4b15      	ldr	r3, [pc, #84]	; (80002e8 <main+0x68>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f022 0201 	bic.w	r2, r2, #1
 8000298:	601a      	str	r2, [r3, #0]

		if(g_button_pressed){
 800029a:	4b14      	ldr	r3, [pc, #80]	; (80002ec <main+0x6c>)
 800029c:	781b      	ldrb	r3, [r3, #0]
 800029e:	b2db      	uxtb	r3, r3
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	d017      	beq.n	80002d4 <main+0x54>
			//Some delay until button debouncing gets over
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002a4:	2300      	movs	r3, #0
 80002a6:	607b      	str	r3, [r7, #4]
 80002a8:	e002      	b.n	80002b0 <main+0x30>
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	3301      	adds	r3, #1
 80002ae:	607b      	str	r3, [r7, #4]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a0f      	ldr	r2, [pc, #60]	; (80002f0 <main+0x70>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d9f8      	bls.n	80002aa <main+0x2a>
			g_button_press_count++;
 80002b8:	4b0e      	ldr	r3, [pc, #56]	; (80002f4 <main+0x74>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	3301      	adds	r3, #1
 80002be:	4a0d      	ldr	r2, [pc, #52]	; (80002f4 <main+0x74>)
 80002c0:	6013      	str	r3, [r2, #0]
			printf("Button is pressed : %lu\n",g_button_press_count);
 80002c2:	4b0c      	ldr	r3, [pc, #48]	; (80002f4 <main+0x74>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	4619      	mov	r1, r3
 80002c8:	480b      	ldr	r0, [pc, #44]	; (80002f8 <main+0x78>)
 80002ca:	f000 fa1f 	bl	800070c <iprintf>
			g_button_pressed = 0;
 80002ce:	4b07      	ldr	r3, [pc, #28]	; (80002ec <main+0x6c>)
 80002d0:	2200      	movs	r2, #0
 80002d2:	701a      	strb	r2, [r3, #0]
		}

		//Enable interrupt
		*pEXTIMaskReg |= ( 1 << 0);
 80002d4:	4b04      	ldr	r3, [pc, #16]	; (80002e8 <main+0x68>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	4b03      	ldr	r3, [pc, #12]	; (80002e8 <main+0x68>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	f042 0201 	orr.w	r2, r2, #1
 80002e2:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 0);
 80002e4:	e7d1      	b.n	800028a <main+0xa>
 80002e6:	bf00      	nop
 80002e8:	2000000c 	.word	0x2000000c
 80002ec:	20000090 	.word	0x20000090
 80002f0:	0003d08f 	.word	0x0003d08f
 80002f4:	20000094 	.word	0x20000094
 80002f8:	08001410 	.word	0x08001410

080002fc <button_init>:

}


void button_init(void)
{
 80002fc:	b480      	push	{r7}
 80002fe:	af00      	add	r7, sp, #0

  *pClkCtrlReg |= ( 1 << 0);
 8000300:	4b16      	ldr	r3, [pc, #88]	; (800035c <button_init+0x60>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	4b15      	ldr	r3, [pc, #84]	; (800035c <button_init+0x60>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f042 0201 	orr.w	r2, r2, #1
 800030e:	601a      	str	r2, [r3, #0]

  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000310:	4b13      	ldr	r3, [pc, #76]	; (8000360 <button_init+0x64>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	681a      	ldr	r2, [r3, #0]
 8000316:	4b12      	ldr	r3, [pc, #72]	; (8000360 <button_init+0x64>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800031e:	601a      	str	r2, [r3, #0]
  //We are activating the 14th bit because external interrupt called as System Configuration and when you check it
  //you will see it is on 14th bit.
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000320:	4b10      	ldr	r3, [pc, #64]	; (8000364 <button_init+0x68>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	4b0f      	ldr	r3, [pc, #60]	; (8000364 <button_init+0x68>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f042 0201 	orr.w	r2, r2, #1
 800032e:	601a      	str	r2, [r3, #0]

  *pEXTIMaskReg |= ( 1 << 0);
 8000330:	4b0d      	ldr	r3, [pc, #52]	; (8000368 <button_init+0x6c>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <button_init+0x6c>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f042 0201 	orr.w	r2, r2, #1
 800033e:	601a      	str	r2, [r3, #0]

  *pNVICIRQEnReg |= ( 1 << 6);
 8000340:	4b0a      	ldr	r3, [pc, #40]	; (800036c <button_init+0x70>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	4b09      	ldr	r3, [pc, #36]	; (800036c <button_init+0x70>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800034e:	601a      	str	r2, [r3, #0]

}
 8000350:	bf00      	nop
 8000352:	46bd      	mov	sp, r7
 8000354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000358:	4770      	bx	lr
 800035a:	bf00      	nop
 800035c:	20000004 	.word	0x20000004
 8000360:	20000008 	.word	0x20000008
 8000364:	20000010 	.word	0x20000010
 8000368:	2000000c 	.word	0x2000000c
 800036c:	20000014 	.word	0x20000014

08000370 <EXTI0_IRQHandler>:

/* This is button interrupt handler*/
void EXTI0_IRQHandler(void)
{
 8000370:	b480      	push	{r7}
 8000372:	af00      	add	r7, sp, #0
	//Make this flag SET . if button pressed
  g_button_pressed = 1;
 8000374:	4b07      	ldr	r3, [pc, #28]	; (8000394 <EXTI0_IRQHandler+0x24>)
 8000376:	2201      	movs	r2, #1
 8000378:	701a      	strb	r2, [r3, #0]

  *pEXTTIPendReg |= ( 1 << 0);
 800037a:	4b07      	ldr	r3, [pc, #28]	; (8000398 <EXTI0_IRQHandler+0x28>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	4b05      	ldr	r3, [pc, #20]	; (8000398 <EXTI0_IRQHandler+0x28>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	f042 0201 	orr.w	r2, r2, #1
 8000388:	601a      	str	r2, [r3, #0]
}
 800038a:	bf00      	nop
 800038c:	46bd      	mov	sp, r7
 800038e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000392:	4770      	bx	lr
 8000394:	20000090 	.word	0x20000090
 8000398:	20000000 	.word	0x20000000

0800039c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	4603      	mov	r3, r0
 80003a4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003a6:	4b0f      	ldr	r3, [pc, #60]	; (80003e4 <ITM_SendChar+0x48>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	4a0e      	ldr	r2, [pc, #56]	; (80003e4 <ITM_SendChar+0x48>)
 80003ac:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003b0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003b2:	4b0d      	ldr	r3, [pc, #52]	; (80003e8 <ITM_SendChar+0x4c>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	4a0c      	ldr	r2, [pc, #48]	; (80003e8 <ITM_SendChar+0x4c>)
 80003b8:	f043 0301 	orr.w	r3, r3, #1
 80003bc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003be:	bf00      	nop
 80003c0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	f003 0301 	and.w	r3, r3, #1
 80003ca:	2b00      	cmp	r3, #0
 80003cc:	d0f8      	beq.n	80003c0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003ce:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003d2:	79fb      	ldrb	r3, [r7, #7]
 80003d4:	6013      	str	r3, [r2, #0]
}
 80003d6:	bf00      	nop
 80003d8:	370c      	adds	r7, #12
 80003da:	46bd      	mov	sp, r7
 80003dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	e000edfc 	.word	0xe000edfc
 80003e8:	e0000e00 	.word	0xe0000e00

080003ec <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b086      	sub	sp, #24
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	60f8      	str	r0, [r7, #12]
 80003f4:	60b9      	str	r1, [r7, #8]
 80003f6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f8:	2300      	movs	r3, #0
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	e00a      	b.n	8000414 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003fe:	f3af 8000 	nop.w
 8000402:	4601      	mov	r1, r0
 8000404:	68bb      	ldr	r3, [r7, #8]
 8000406:	1c5a      	adds	r2, r3, #1
 8000408:	60ba      	str	r2, [r7, #8]
 800040a:	b2ca      	uxtb	r2, r1
 800040c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040e:	697b      	ldr	r3, [r7, #20]
 8000410:	3301      	adds	r3, #1
 8000412:	617b      	str	r3, [r7, #20]
 8000414:	697a      	ldr	r2, [r7, #20]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	429a      	cmp	r2, r3
 800041a:	dbf0      	blt.n	80003fe <_read+0x12>
  }

  return len;
 800041c:	687b      	ldr	r3, [r7, #4]
}
 800041e:	4618      	mov	r0, r3
 8000420:	3718      	adds	r7, #24
 8000422:	46bd      	mov	sp, r7
 8000424:	bd80      	pop	{r7, pc}

08000426 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000426:	b580      	push	{r7, lr}
 8000428:	b086      	sub	sp, #24
 800042a:	af00      	add	r7, sp, #0
 800042c:	60f8      	str	r0, [r7, #12]
 800042e:	60b9      	str	r1, [r7, #8]
 8000430:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000432:	2300      	movs	r3, #0
 8000434:	617b      	str	r3, [r7, #20]
 8000436:	e009      	b.n	800044c <_write+0x26>
  {
    //__io_putchar(*ptr++);
	 ITM_SendChar(*ptr++);
 8000438:	68bb      	ldr	r3, [r7, #8]
 800043a:	1c5a      	adds	r2, r3, #1
 800043c:	60ba      	str	r2, [r7, #8]
 800043e:	781b      	ldrb	r3, [r3, #0]
 8000440:	4618      	mov	r0, r3
 8000442:	f7ff ffab 	bl	800039c <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000446:	697b      	ldr	r3, [r7, #20]
 8000448:	3301      	adds	r3, #1
 800044a:	617b      	str	r3, [r7, #20]
 800044c:	697a      	ldr	r2, [r7, #20]
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	429a      	cmp	r2, r3
 8000452:	dbf1      	blt.n	8000438 <_write+0x12>
  }
  return len;
 8000454:	687b      	ldr	r3, [r7, #4]
}
 8000456:	4618      	mov	r0, r3
 8000458:	3718      	adds	r7, #24
 800045a:	46bd      	mov	sp, r7
 800045c:	bd80      	pop	{r7, pc}

0800045e <_close>:

int _close(int file)
{
 800045e:	b480      	push	{r7}
 8000460:	b083      	sub	sp, #12
 8000462:	af00      	add	r7, sp, #0
 8000464:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000466:	f04f 33ff 	mov.w	r3, #4294967295
}
 800046a:	4618      	mov	r0, r3
 800046c:	370c      	adds	r7, #12
 800046e:	46bd      	mov	sp, r7
 8000470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000474:	4770      	bx	lr

08000476 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000476:	b480      	push	{r7}
 8000478:	b083      	sub	sp, #12
 800047a:	af00      	add	r7, sp, #0
 800047c:	6078      	str	r0, [r7, #4]
 800047e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000480:	683b      	ldr	r3, [r7, #0]
 8000482:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000486:	605a      	str	r2, [r3, #4]
  return 0;
 8000488:	2300      	movs	r3, #0
}
 800048a:	4618      	mov	r0, r3
 800048c:	370c      	adds	r7, #12
 800048e:	46bd      	mov	sp, r7
 8000490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000494:	4770      	bx	lr

08000496 <_isatty>:

int _isatty(int file)
{
 8000496:	b480      	push	{r7}
 8000498:	b083      	sub	sp, #12
 800049a:	af00      	add	r7, sp, #0
 800049c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800049e:	2301      	movs	r3, #1
}
 80004a0:	4618      	mov	r0, r3
 80004a2:	370c      	adds	r7, #12
 80004a4:	46bd      	mov	sp, r7
 80004a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004aa:	4770      	bx	lr

080004ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ac:	b480      	push	{r7}
 80004ae:	b085      	sub	sp, #20
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	60f8      	str	r0, [r7, #12]
 80004b4:	60b9      	str	r1, [r7, #8]
 80004b6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004b8:	2300      	movs	r3, #0
}
 80004ba:	4618      	mov	r0, r3
 80004bc:	3714      	adds	r7, #20
 80004be:	46bd      	mov	sp, r7
 80004c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c4:	4770      	bx	lr
	...

080004c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b086      	sub	sp, #24
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004d0:	4a14      	ldr	r2, [pc, #80]	; (8000524 <_sbrk+0x5c>)
 80004d2:	4b15      	ldr	r3, [pc, #84]	; (8000528 <_sbrk+0x60>)
 80004d4:	1ad3      	subs	r3, r2, r3
 80004d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d8:	697b      	ldr	r3, [r7, #20]
 80004da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004dc:	4b13      	ldr	r3, [pc, #76]	; (800052c <_sbrk+0x64>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d102      	bne.n	80004ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004e4:	4b11      	ldr	r3, [pc, #68]	; (800052c <_sbrk+0x64>)
 80004e6:	4a12      	ldr	r2, [pc, #72]	; (8000530 <_sbrk+0x68>)
 80004e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ea:	4b10      	ldr	r3, [pc, #64]	; (800052c <_sbrk+0x64>)
 80004ec:	681a      	ldr	r2, [r3, #0]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	4413      	add	r3, r2
 80004f2:	693a      	ldr	r2, [r7, #16]
 80004f4:	429a      	cmp	r2, r3
 80004f6:	d207      	bcs.n	8000508 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f8:	f000 f9ac 	bl	8000854 <__errno>
 80004fc:	4603      	mov	r3, r0
 80004fe:	220c      	movs	r2, #12
 8000500:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000502:	f04f 33ff 	mov.w	r3, #4294967295
 8000506:	e009      	b.n	800051c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000508:	4b08      	ldr	r3, [pc, #32]	; (800052c <_sbrk+0x64>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800050e:	4b07      	ldr	r3, [pc, #28]	; (800052c <_sbrk+0x64>)
 8000510:	681a      	ldr	r2, [r3, #0]
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	4413      	add	r3, r2
 8000516:	4a05      	ldr	r2, [pc, #20]	; (800052c <_sbrk+0x64>)
 8000518:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800051a:	68fb      	ldr	r3, [r7, #12]
}
 800051c:	4618      	mov	r0, r3
 800051e:	3718      	adds	r7, #24
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}
 8000524:	20020000 	.word	0x20020000
 8000528:	00000400 	.word	0x00000400
 800052c:	20000098 	.word	0x20000098
 8000530:	200001e8 	.word	0x200001e8

08000534 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000534:	480d      	ldr	r0, [pc, #52]	; (800056c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000536:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000538:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800053c:	480c      	ldr	r0, [pc, #48]	; (8000570 <LoopForever+0x6>)
  ldr r1, =_edata
 800053e:	490d      	ldr	r1, [pc, #52]	; (8000574 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000540:	4a0d      	ldr	r2, [pc, #52]	; (8000578 <LoopForever+0xe>)
  movs r3, #0
 8000542:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000544:	e002      	b.n	800054c <LoopCopyDataInit>

08000546 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000546:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000548:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800054a:	3304      	adds	r3, #4

0800054c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800054c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000550:	d3f9      	bcc.n	8000546 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000552:	4a0a      	ldr	r2, [pc, #40]	; (800057c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000554:	4c0a      	ldr	r4, [pc, #40]	; (8000580 <LoopForever+0x16>)
  movs r3, #0
 8000556:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000558:	e001      	b.n	800055e <LoopFillZerobss>

0800055a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800055a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800055c:	3204      	adds	r2, #4

0800055e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000560:	d3fb      	bcc.n	800055a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000562:	f000 f97d 	bl	8000860 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000566:	f7ff fe8b 	bl	8000280 <main>

0800056a <LoopForever>:

LoopForever:
  b LoopForever
 800056a:	e7fe      	b.n	800056a <LoopForever>
  ldr   r0, =_estack
 800056c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000570:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000574:	20000074 	.word	0x20000074
  ldr r2, =_sidata
 8000578:	08001464 	.word	0x08001464
  ldr r2, =_sbss
 800057c:	20000074 	.word	0x20000074
  ldr r4, =_ebss
 8000580:	200001e8 	.word	0x200001e8

08000584 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000584:	e7fe      	b.n	8000584 <ADC_IRQHandler>
	...

08000588 <std>:
 8000588:	2300      	movs	r3, #0
 800058a:	b510      	push	{r4, lr}
 800058c:	4604      	mov	r4, r0
 800058e:	e9c0 3300 	strd	r3, r3, [r0]
 8000592:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000596:	6083      	str	r3, [r0, #8]
 8000598:	8181      	strh	r1, [r0, #12]
 800059a:	6643      	str	r3, [r0, #100]	; 0x64
 800059c:	81c2      	strh	r2, [r0, #14]
 800059e:	6183      	str	r3, [r0, #24]
 80005a0:	4619      	mov	r1, r3
 80005a2:	2208      	movs	r2, #8
 80005a4:	305c      	adds	r0, #92	; 0x5c
 80005a6:	f000 f906 	bl	80007b6 <memset>
 80005aa:	4b0d      	ldr	r3, [pc, #52]	; (80005e0 <std+0x58>)
 80005ac:	6263      	str	r3, [r4, #36]	; 0x24
 80005ae:	4b0d      	ldr	r3, [pc, #52]	; (80005e4 <std+0x5c>)
 80005b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005b2:	4b0d      	ldr	r3, [pc, #52]	; (80005e8 <std+0x60>)
 80005b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005b6:	4b0d      	ldr	r3, [pc, #52]	; (80005ec <std+0x64>)
 80005b8:	6323      	str	r3, [r4, #48]	; 0x30
 80005ba:	4b0d      	ldr	r3, [pc, #52]	; (80005f0 <std+0x68>)
 80005bc:	6224      	str	r4, [r4, #32]
 80005be:	429c      	cmp	r4, r3
 80005c0:	d006      	beq.n	80005d0 <std+0x48>
 80005c2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005c6:	4294      	cmp	r4, r2
 80005c8:	d002      	beq.n	80005d0 <std+0x48>
 80005ca:	33d0      	adds	r3, #208	; 0xd0
 80005cc:	429c      	cmp	r4, r3
 80005ce:	d105      	bne.n	80005dc <std+0x54>
 80005d0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d8:	f000 b966 	b.w	80008a8 <__retarget_lock_init_recursive>
 80005dc:	bd10      	pop	{r4, pc}
 80005de:	bf00      	nop
 80005e0:	08000731 	.word	0x08000731
 80005e4:	08000753 	.word	0x08000753
 80005e8:	0800078b 	.word	0x0800078b
 80005ec:	080007af 	.word	0x080007af
 80005f0:	2000009c 	.word	0x2000009c

080005f4 <stdio_exit_handler>:
 80005f4:	4a02      	ldr	r2, [pc, #8]	; (8000600 <stdio_exit_handler+0xc>)
 80005f6:	4903      	ldr	r1, [pc, #12]	; (8000604 <stdio_exit_handler+0x10>)
 80005f8:	4803      	ldr	r0, [pc, #12]	; (8000608 <stdio_exit_handler+0x14>)
 80005fa:	f000 b869 	b.w	80006d0 <_fwalk_sglue>
 80005fe:	bf00      	nop
 8000600:	20000018 	.word	0x20000018
 8000604:	08001155 	.word	0x08001155
 8000608:	20000024 	.word	0x20000024

0800060c <cleanup_stdio>:
 800060c:	6841      	ldr	r1, [r0, #4]
 800060e:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <cleanup_stdio+0x34>)
 8000610:	4299      	cmp	r1, r3
 8000612:	b510      	push	{r4, lr}
 8000614:	4604      	mov	r4, r0
 8000616:	d001      	beq.n	800061c <cleanup_stdio+0x10>
 8000618:	f000 fd9c 	bl	8001154 <_fflush_r>
 800061c:	68a1      	ldr	r1, [r4, #8]
 800061e:	4b09      	ldr	r3, [pc, #36]	; (8000644 <cleanup_stdio+0x38>)
 8000620:	4299      	cmp	r1, r3
 8000622:	d002      	beq.n	800062a <cleanup_stdio+0x1e>
 8000624:	4620      	mov	r0, r4
 8000626:	f000 fd95 	bl	8001154 <_fflush_r>
 800062a:	68e1      	ldr	r1, [r4, #12]
 800062c:	4b06      	ldr	r3, [pc, #24]	; (8000648 <cleanup_stdio+0x3c>)
 800062e:	4299      	cmp	r1, r3
 8000630:	d004      	beq.n	800063c <cleanup_stdio+0x30>
 8000632:	4620      	mov	r0, r4
 8000634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000638:	f000 bd8c 	b.w	8001154 <_fflush_r>
 800063c:	bd10      	pop	{r4, pc}
 800063e:	bf00      	nop
 8000640:	2000009c 	.word	0x2000009c
 8000644:	20000104 	.word	0x20000104
 8000648:	2000016c 	.word	0x2000016c

0800064c <global_stdio_init.part.0>:
 800064c:	b510      	push	{r4, lr}
 800064e:	4b0b      	ldr	r3, [pc, #44]	; (800067c <global_stdio_init.part.0+0x30>)
 8000650:	4c0b      	ldr	r4, [pc, #44]	; (8000680 <global_stdio_init.part.0+0x34>)
 8000652:	4a0c      	ldr	r2, [pc, #48]	; (8000684 <global_stdio_init.part.0+0x38>)
 8000654:	601a      	str	r2, [r3, #0]
 8000656:	4620      	mov	r0, r4
 8000658:	2200      	movs	r2, #0
 800065a:	2104      	movs	r1, #4
 800065c:	f7ff ff94 	bl	8000588 <std>
 8000660:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000664:	2201      	movs	r2, #1
 8000666:	2109      	movs	r1, #9
 8000668:	f7ff ff8e 	bl	8000588 <std>
 800066c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000670:	2202      	movs	r2, #2
 8000672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000676:	2112      	movs	r1, #18
 8000678:	f7ff bf86 	b.w	8000588 <std>
 800067c:	200001d4 	.word	0x200001d4
 8000680:	2000009c 	.word	0x2000009c
 8000684:	080005f5 	.word	0x080005f5

08000688 <__sfp_lock_acquire>:
 8000688:	4801      	ldr	r0, [pc, #4]	; (8000690 <__sfp_lock_acquire+0x8>)
 800068a:	f000 b90e 	b.w	80008aa <__retarget_lock_acquire_recursive>
 800068e:	bf00      	nop
 8000690:	200001dd 	.word	0x200001dd

08000694 <__sfp_lock_release>:
 8000694:	4801      	ldr	r0, [pc, #4]	; (800069c <__sfp_lock_release+0x8>)
 8000696:	f000 b909 	b.w	80008ac <__retarget_lock_release_recursive>
 800069a:	bf00      	nop
 800069c:	200001dd 	.word	0x200001dd

080006a0 <__sinit>:
 80006a0:	b510      	push	{r4, lr}
 80006a2:	4604      	mov	r4, r0
 80006a4:	f7ff fff0 	bl	8000688 <__sfp_lock_acquire>
 80006a8:	6a23      	ldr	r3, [r4, #32]
 80006aa:	b11b      	cbz	r3, 80006b4 <__sinit+0x14>
 80006ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006b0:	f7ff bff0 	b.w	8000694 <__sfp_lock_release>
 80006b4:	4b04      	ldr	r3, [pc, #16]	; (80006c8 <__sinit+0x28>)
 80006b6:	6223      	str	r3, [r4, #32]
 80006b8:	4b04      	ldr	r3, [pc, #16]	; (80006cc <__sinit+0x2c>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d1f5      	bne.n	80006ac <__sinit+0xc>
 80006c0:	f7ff ffc4 	bl	800064c <global_stdio_init.part.0>
 80006c4:	e7f2      	b.n	80006ac <__sinit+0xc>
 80006c6:	bf00      	nop
 80006c8:	0800060d 	.word	0x0800060d
 80006cc:	200001d4 	.word	0x200001d4

080006d0 <_fwalk_sglue>:
 80006d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006d4:	4607      	mov	r7, r0
 80006d6:	4688      	mov	r8, r1
 80006d8:	4614      	mov	r4, r2
 80006da:	2600      	movs	r6, #0
 80006dc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006e0:	f1b9 0901 	subs.w	r9, r9, #1
 80006e4:	d505      	bpl.n	80006f2 <_fwalk_sglue+0x22>
 80006e6:	6824      	ldr	r4, [r4, #0]
 80006e8:	2c00      	cmp	r4, #0
 80006ea:	d1f7      	bne.n	80006dc <_fwalk_sglue+0xc>
 80006ec:	4630      	mov	r0, r6
 80006ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006f2:	89ab      	ldrh	r3, [r5, #12]
 80006f4:	2b01      	cmp	r3, #1
 80006f6:	d907      	bls.n	8000708 <_fwalk_sglue+0x38>
 80006f8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006fc:	3301      	adds	r3, #1
 80006fe:	d003      	beq.n	8000708 <_fwalk_sglue+0x38>
 8000700:	4629      	mov	r1, r5
 8000702:	4638      	mov	r0, r7
 8000704:	47c0      	blx	r8
 8000706:	4306      	orrs	r6, r0
 8000708:	3568      	adds	r5, #104	; 0x68
 800070a:	e7e9      	b.n	80006e0 <_fwalk_sglue+0x10>

0800070c <iprintf>:
 800070c:	b40f      	push	{r0, r1, r2, r3}
 800070e:	b507      	push	{r0, r1, r2, lr}
 8000710:	4906      	ldr	r1, [pc, #24]	; (800072c <iprintf+0x20>)
 8000712:	ab04      	add	r3, sp, #16
 8000714:	6808      	ldr	r0, [r1, #0]
 8000716:	f853 2b04 	ldr.w	r2, [r3], #4
 800071a:	6881      	ldr	r1, [r0, #8]
 800071c:	9301      	str	r3, [sp, #4]
 800071e:	f000 f9e9 	bl	8000af4 <_vfiprintf_r>
 8000722:	b003      	add	sp, #12
 8000724:	f85d eb04 	ldr.w	lr, [sp], #4
 8000728:	b004      	add	sp, #16
 800072a:	4770      	bx	lr
 800072c:	20000070 	.word	0x20000070

08000730 <__sread>:
 8000730:	b510      	push	{r4, lr}
 8000732:	460c      	mov	r4, r1
 8000734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000738:	f000 f868 	bl	800080c <_read_r>
 800073c:	2800      	cmp	r0, #0
 800073e:	bfab      	itete	ge
 8000740:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000742:	89a3      	ldrhlt	r3, [r4, #12]
 8000744:	181b      	addge	r3, r3, r0
 8000746:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800074a:	bfac      	ite	ge
 800074c:	6563      	strge	r3, [r4, #84]	; 0x54
 800074e:	81a3      	strhlt	r3, [r4, #12]
 8000750:	bd10      	pop	{r4, pc}

08000752 <__swrite>:
 8000752:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000756:	461f      	mov	r7, r3
 8000758:	898b      	ldrh	r3, [r1, #12]
 800075a:	05db      	lsls	r3, r3, #23
 800075c:	4605      	mov	r5, r0
 800075e:	460c      	mov	r4, r1
 8000760:	4616      	mov	r6, r2
 8000762:	d505      	bpl.n	8000770 <__swrite+0x1e>
 8000764:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000768:	2302      	movs	r3, #2
 800076a:	2200      	movs	r2, #0
 800076c:	f000 f83c 	bl	80007e8 <_lseek_r>
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000776:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800077a:	81a3      	strh	r3, [r4, #12]
 800077c:	4632      	mov	r2, r6
 800077e:	463b      	mov	r3, r7
 8000780:	4628      	mov	r0, r5
 8000782:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000786:	f000 b853 	b.w	8000830 <_write_r>

0800078a <__sseek>:
 800078a:	b510      	push	{r4, lr}
 800078c:	460c      	mov	r4, r1
 800078e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000792:	f000 f829 	bl	80007e8 <_lseek_r>
 8000796:	1c43      	adds	r3, r0, #1
 8000798:	89a3      	ldrh	r3, [r4, #12]
 800079a:	bf15      	itete	ne
 800079c:	6560      	strne	r0, [r4, #84]	; 0x54
 800079e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80007a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80007a6:	81a3      	strheq	r3, [r4, #12]
 80007a8:	bf18      	it	ne
 80007aa:	81a3      	strhne	r3, [r4, #12]
 80007ac:	bd10      	pop	{r4, pc}

080007ae <__sclose>:
 80007ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007b2:	f000 b809 	b.w	80007c8 <_close_r>

080007b6 <memset>:
 80007b6:	4402      	add	r2, r0
 80007b8:	4603      	mov	r3, r0
 80007ba:	4293      	cmp	r3, r2
 80007bc:	d100      	bne.n	80007c0 <memset+0xa>
 80007be:	4770      	bx	lr
 80007c0:	f803 1b01 	strb.w	r1, [r3], #1
 80007c4:	e7f9      	b.n	80007ba <memset+0x4>
	...

080007c8 <_close_r>:
 80007c8:	b538      	push	{r3, r4, r5, lr}
 80007ca:	4d06      	ldr	r5, [pc, #24]	; (80007e4 <_close_r+0x1c>)
 80007cc:	2300      	movs	r3, #0
 80007ce:	4604      	mov	r4, r0
 80007d0:	4608      	mov	r0, r1
 80007d2:	602b      	str	r3, [r5, #0]
 80007d4:	f7ff fe43 	bl	800045e <_close>
 80007d8:	1c43      	adds	r3, r0, #1
 80007da:	d102      	bne.n	80007e2 <_close_r+0x1a>
 80007dc:	682b      	ldr	r3, [r5, #0]
 80007de:	b103      	cbz	r3, 80007e2 <_close_r+0x1a>
 80007e0:	6023      	str	r3, [r4, #0]
 80007e2:	bd38      	pop	{r3, r4, r5, pc}
 80007e4:	200001d8 	.word	0x200001d8

080007e8 <_lseek_r>:
 80007e8:	b538      	push	{r3, r4, r5, lr}
 80007ea:	4d07      	ldr	r5, [pc, #28]	; (8000808 <_lseek_r+0x20>)
 80007ec:	4604      	mov	r4, r0
 80007ee:	4608      	mov	r0, r1
 80007f0:	4611      	mov	r1, r2
 80007f2:	2200      	movs	r2, #0
 80007f4:	602a      	str	r2, [r5, #0]
 80007f6:	461a      	mov	r2, r3
 80007f8:	f7ff fe58 	bl	80004ac <_lseek>
 80007fc:	1c43      	adds	r3, r0, #1
 80007fe:	d102      	bne.n	8000806 <_lseek_r+0x1e>
 8000800:	682b      	ldr	r3, [r5, #0]
 8000802:	b103      	cbz	r3, 8000806 <_lseek_r+0x1e>
 8000804:	6023      	str	r3, [r4, #0]
 8000806:	bd38      	pop	{r3, r4, r5, pc}
 8000808:	200001d8 	.word	0x200001d8

0800080c <_read_r>:
 800080c:	b538      	push	{r3, r4, r5, lr}
 800080e:	4d07      	ldr	r5, [pc, #28]	; (800082c <_read_r+0x20>)
 8000810:	4604      	mov	r4, r0
 8000812:	4608      	mov	r0, r1
 8000814:	4611      	mov	r1, r2
 8000816:	2200      	movs	r2, #0
 8000818:	602a      	str	r2, [r5, #0]
 800081a:	461a      	mov	r2, r3
 800081c:	f7ff fde6 	bl	80003ec <_read>
 8000820:	1c43      	adds	r3, r0, #1
 8000822:	d102      	bne.n	800082a <_read_r+0x1e>
 8000824:	682b      	ldr	r3, [r5, #0]
 8000826:	b103      	cbz	r3, 800082a <_read_r+0x1e>
 8000828:	6023      	str	r3, [r4, #0]
 800082a:	bd38      	pop	{r3, r4, r5, pc}
 800082c:	200001d8 	.word	0x200001d8

08000830 <_write_r>:
 8000830:	b538      	push	{r3, r4, r5, lr}
 8000832:	4d07      	ldr	r5, [pc, #28]	; (8000850 <_write_r+0x20>)
 8000834:	4604      	mov	r4, r0
 8000836:	4608      	mov	r0, r1
 8000838:	4611      	mov	r1, r2
 800083a:	2200      	movs	r2, #0
 800083c:	602a      	str	r2, [r5, #0]
 800083e:	461a      	mov	r2, r3
 8000840:	f7ff fdf1 	bl	8000426 <_write>
 8000844:	1c43      	adds	r3, r0, #1
 8000846:	d102      	bne.n	800084e <_write_r+0x1e>
 8000848:	682b      	ldr	r3, [r5, #0]
 800084a:	b103      	cbz	r3, 800084e <_write_r+0x1e>
 800084c:	6023      	str	r3, [r4, #0]
 800084e:	bd38      	pop	{r3, r4, r5, pc}
 8000850:	200001d8 	.word	0x200001d8

08000854 <__errno>:
 8000854:	4b01      	ldr	r3, [pc, #4]	; (800085c <__errno+0x8>)
 8000856:	6818      	ldr	r0, [r3, #0]
 8000858:	4770      	bx	lr
 800085a:	bf00      	nop
 800085c:	20000070 	.word	0x20000070

08000860 <__libc_init_array>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	4d0d      	ldr	r5, [pc, #52]	; (8000898 <__libc_init_array+0x38>)
 8000864:	4c0d      	ldr	r4, [pc, #52]	; (800089c <__libc_init_array+0x3c>)
 8000866:	1b64      	subs	r4, r4, r5
 8000868:	10a4      	asrs	r4, r4, #2
 800086a:	2600      	movs	r6, #0
 800086c:	42a6      	cmp	r6, r4
 800086e:	d109      	bne.n	8000884 <__libc_init_array+0x24>
 8000870:	4d0b      	ldr	r5, [pc, #44]	; (80008a0 <__libc_init_array+0x40>)
 8000872:	4c0c      	ldr	r4, [pc, #48]	; (80008a4 <__libc_init_array+0x44>)
 8000874:	f000 fdc0 	bl	80013f8 <_init>
 8000878:	1b64      	subs	r4, r4, r5
 800087a:	10a4      	asrs	r4, r4, #2
 800087c:	2600      	movs	r6, #0
 800087e:	42a6      	cmp	r6, r4
 8000880:	d105      	bne.n	800088e <__libc_init_array+0x2e>
 8000882:	bd70      	pop	{r4, r5, r6, pc}
 8000884:	f855 3b04 	ldr.w	r3, [r5], #4
 8000888:	4798      	blx	r3
 800088a:	3601      	adds	r6, #1
 800088c:	e7ee      	b.n	800086c <__libc_init_array+0xc>
 800088e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000892:	4798      	blx	r3
 8000894:	3601      	adds	r6, #1
 8000896:	e7f2      	b.n	800087e <__libc_init_array+0x1e>
 8000898:	0800145c 	.word	0x0800145c
 800089c:	0800145c 	.word	0x0800145c
 80008a0:	0800145c 	.word	0x0800145c
 80008a4:	08001460 	.word	0x08001460

080008a8 <__retarget_lock_init_recursive>:
 80008a8:	4770      	bx	lr

080008aa <__retarget_lock_acquire_recursive>:
 80008aa:	4770      	bx	lr

080008ac <__retarget_lock_release_recursive>:
 80008ac:	4770      	bx	lr
	...

080008b0 <_free_r>:
 80008b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008b2:	2900      	cmp	r1, #0
 80008b4:	d044      	beq.n	8000940 <_free_r+0x90>
 80008b6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008ba:	9001      	str	r0, [sp, #4]
 80008bc:	2b00      	cmp	r3, #0
 80008be:	f1a1 0404 	sub.w	r4, r1, #4
 80008c2:	bfb8      	it	lt
 80008c4:	18e4      	addlt	r4, r4, r3
 80008c6:	f000 f8df 	bl	8000a88 <__malloc_lock>
 80008ca:	4a1e      	ldr	r2, [pc, #120]	; (8000944 <_free_r+0x94>)
 80008cc:	9801      	ldr	r0, [sp, #4]
 80008ce:	6813      	ldr	r3, [r2, #0]
 80008d0:	b933      	cbnz	r3, 80008e0 <_free_r+0x30>
 80008d2:	6063      	str	r3, [r4, #4]
 80008d4:	6014      	str	r4, [r2, #0]
 80008d6:	b003      	add	sp, #12
 80008d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008dc:	f000 b8da 	b.w	8000a94 <__malloc_unlock>
 80008e0:	42a3      	cmp	r3, r4
 80008e2:	d908      	bls.n	80008f6 <_free_r+0x46>
 80008e4:	6825      	ldr	r5, [r4, #0]
 80008e6:	1961      	adds	r1, r4, r5
 80008e8:	428b      	cmp	r3, r1
 80008ea:	bf01      	itttt	eq
 80008ec:	6819      	ldreq	r1, [r3, #0]
 80008ee:	685b      	ldreq	r3, [r3, #4]
 80008f0:	1949      	addeq	r1, r1, r5
 80008f2:	6021      	streq	r1, [r4, #0]
 80008f4:	e7ed      	b.n	80008d2 <_free_r+0x22>
 80008f6:	461a      	mov	r2, r3
 80008f8:	685b      	ldr	r3, [r3, #4]
 80008fa:	b10b      	cbz	r3, 8000900 <_free_r+0x50>
 80008fc:	42a3      	cmp	r3, r4
 80008fe:	d9fa      	bls.n	80008f6 <_free_r+0x46>
 8000900:	6811      	ldr	r1, [r2, #0]
 8000902:	1855      	adds	r5, r2, r1
 8000904:	42a5      	cmp	r5, r4
 8000906:	d10b      	bne.n	8000920 <_free_r+0x70>
 8000908:	6824      	ldr	r4, [r4, #0]
 800090a:	4421      	add	r1, r4
 800090c:	1854      	adds	r4, r2, r1
 800090e:	42a3      	cmp	r3, r4
 8000910:	6011      	str	r1, [r2, #0]
 8000912:	d1e0      	bne.n	80008d6 <_free_r+0x26>
 8000914:	681c      	ldr	r4, [r3, #0]
 8000916:	685b      	ldr	r3, [r3, #4]
 8000918:	6053      	str	r3, [r2, #4]
 800091a:	440c      	add	r4, r1
 800091c:	6014      	str	r4, [r2, #0]
 800091e:	e7da      	b.n	80008d6 <_free_r+0x26>
 8000920:	d902      	bls.n	8000928 <_free_r+0x78>
 8000922:	230c      	movs	r3, #12
 8000924:	6003      	str	r3, [r0, #0]
 8000926:	e7d6      	b.n	80008d6 <_free_r+0x26>
 8000928:	6825      	ldr	r5, [r4, #0]
 800092a:	1961      	adds	r1, r4, r5
 800092c:	428b      	cmp	r3, r1
 800092e:	bf04      	itt	eq
 8000930:	6819      	ldreq	r1, [r3, #0]
 8000932:	685b      	ldreq	r3, [r3, #4]
 8000934:	6063      	str	r3, [r4, #4]
 8000936:	bf04      	itt	eq
 8000938:	1949      	addeq	r1, r1, r5
 800093a:	6021      	streq	r1, [r4, #0]
 800093c:	6054      	str	r4, [r2, #4]
 800093e:	e7ca      	b.n	80008d6 <_free_r+0x26>
 8000940:	b003      	add	sp, #12
 8000942:	bd30      	pop	{r4, r5, pc}
 8000944:	200001e0 	.word	0x200001e0

08000948 <sbrk_aligned>:
 8000948:	b570      	push	{r4, r5, r6, lr}
 800094a:	4e0e      	ldr	r6, [pc, #56]	; (8000984 <sbrk_aligned+0x3c>)
 800094c:	460c      	mov	r4, r1
 800094e:	6831      	ldr	r1, [r6, #0]
 8000950:	4605      	mov	r5, r0
 8000952:	b911      	cbnz	r1, 800095a <sbrk_aligned+0x12>
 8000954:	f000 fcbc 	bl	80012d0 <_sbrk_r>
 8000958:	6030      	str	r0, [r6, #0]
 800095a:	4621      	mov	r1, r4
 800095c:	4628      	mov	r0, r5
 800095e:	f000 fcb7 	bl	80012d0 <_sbrk_r>
 8000962:	1c43      	adds	r3, r0, #1
 8000964:	d00a      	beq.n	800097c <sbrk_aligned+0x34>
 8000966:	1cc4      	adds	r4, r0, #3
 8000968:	f024 0403 	bic.w	r4, r4, #3
 800096c:	42a0      	cmp	r0, r4
 800096e:	d007      	beq.n	8000980 <sbrk_aligned+0x38>
 8000970:	1a21      	subs	r1, r4, r0
 8000972:	4628      	mov	r0, r5
 8000974:	f000 fcac 	bl	80012d0 <_sbrk_r>
 8000978:	3001      	adds	r0, #1
 800097a:	d101      	bne.n	8000980 <sbrk_aligned+0x38>
 800097c:	f04f 34ff 	mov.w	r4, #4294967295
 8000980:	4620      	mov	r0, r4
 8000982:	bd70      	pop	{r4, r5, r6, pc}
 8000984:	200001e4 	.word	0x200001e4

08000988 <_malloc_r>:
 8000988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800098c:	1ccd      	adds	r5, r1, #3
 800098e:	f025 0503 	bic.w	r5, r5, #3
 8000992:	3508      	adds	r5, #8
 8000994:	2d0c      	cmp	r5, #12
 8000996:	bf38      	it	cc
 8000998:	250c      	movcc	r5, #12
 800099a:	2d00      	cmp	r5, #0
 800099c:	4607      	mov	r7, r0
 800099e:	db01      	blt.n	80009a4 <_malloc_r+0x1c>
 80009a0:	42a9      	cmp	r1, r5
 80009a2:	d905      	bls.n	80009b0 <_malloc_r+0x28>
 80009a4:	230c      	movs	r3, #12
 80009a6:	603b      	str	r3, [r7, #0]
 80009a8:	2600      	movs	r6, #0
 80009aa:	4630      	mov	r0, r6
 80009ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009b0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a84 <_malloc_r+0xfc>
 80009b4:	f000 f868 	bl	8000a88 <__malloc_lock>
 80009b8:	f8d8 3000 	ldr.w	r3, [r8]
 80009bc:	461c      	mov	r4, r3
 80009be:	bb5c      	cbnz	r4, 8000a18 <_malloc_r+0x90>
 80009c0:	4629      	mov	r1, r5
 80009c2:	4638      	mov	r0, r7
 80009c4:	f7ff ffc0 	bl	8000948 <sbrk_aligned>
 80009c8:	1c43      	adds	r3, r0, #1
 80009ca:	4604      	mov	r4, r0
 80009cc:	d155      	bne.n	8000a7a <_malloc_r+0xf2>
 80009ce:	f8d8 4000 	ldr.w	r4, [r8]
 80009d2:	4626      	mov	r6, r4
 80009d4:	2e00      	cmp	r6, #0
 80009d6:	d145      	bne.n	8000a64 <_malloc_r+0xdc>
 80009d8:	2c00      	cmp	r4, #0
 80009da:	d048      	beq.n	8000a6e <_malloc_r+0xe6>
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4631      	mov	r1, r6
 80009e0:	4638      	mov	r0, r7
 80009e2:	eb04 0903 	add.w	r9, r4, r3
 80009e6:	f000 fc73 	bl	80012d0 <_sbrk_r>
 80009ea:	4581      	cmp	r9, r0
 80009ec:	d13f      	bne.n	8000a6e <_malloc_r+0xe6>
 80009ee:	6821      	ldr	r1, [r4, #0]
 80009f0:	1a6d      	subs	r5, r5, r1
 80009f2:	4629      	mov	r1, r5
 80009f4:	4638      	mov	r0, r7
 80009f6:	f7ff ffa7 	bl	8000948 <sbrk_aligned>
 80009fa:	3001      	adds	r0, #1
 80009fc:	d037      	beq.n	8000a6e <_malloc_r+0xe6>
 80009fe:	6823      	ldr	r3, [r4, #0]
 8000a00:	442b      	add	r3, r5
 8000a02:	6023      	str	r3, [r4, #0]
 8000a04:	f8d8 3000 	ldr.w	r3, [r8]
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d038      	beq.n	8000a7e <_malloc_r+0xf6>
 8000a0c:	685a      	ldr	r2, [r3, #4]
 8000a0e:	42a2      	cmp	r2, r4
 8000a10:	d12b      	bne.n	8000a6a <_malloc_r+0xe2>
 8000a12:	2200      	movs	r2, #0
 8000a14:	605a      	str	r2, [r3, #4]
 8000a16:	e00f      	b.n	8000a38 <_malloc_r+0xb0>
 8000a18:	6822      	ldr	r2, [r4, #0]
 8000a1a:	1b52      	subs	r2, r2, r5
 8000a1c:	d41f      	bmi.n	8000a5e <_malloc_r+0xd6>
 8000a1e:	2a0b      	cmp	r2, #11
 8000a20:	d917      	bls.n	8000a52 <_malloc_r+0xca>
 8000a22:	1961      	adds	r1, r4, r5
 8000a24:	42a3      	cmp	r3, r4
 8000a26:	6025      	str	r5, [r4, #0]
 8000a28:	bf18      	it	ne
 8000a2a:	6059      	strne	r1, [r3, #4]
 8000a2c:	6863      	ldr	r3, [r4, #4]
 8000a2e:	bf08      	it	eq
 8000a30:	f8c8 1000 	streq.w	r1, [r8]
 8000a34:	5162      	str	r2, [r4, r5]
 8000a36:	604b      	str	r3, [r1, #4]
 8000a38:	4638      	mov	r0, r7
 8000a3a:	f104 060b 	add.w	r6, r4, #11
 8000a3e:	f000 f829 	bl	8000a94 <__malloc_unlock>
 8000a42:	f026 0607 	bic.w	r6, r6, #7
 8000a46:	1d23      	adds	r3, r4, #4
 8000a48:	1af2      	subs	r2, r6, r3
 8000a4a:	d0ae      	beq.n	80009aa <_malloc_r+0x22>
 8000a4c:	1b9b      	subs	r3, r3, r6
 8000a4e:	50a3      	str	r3, [r4, r2]
 8000a50:	e7ab      	b.n	80009aa <_malloc_r+0x22>
 8000a52:	42a3      	cmp	r3, r4
 8000a54:	6862      	ldr	r2, [r4, #4]
 8000a56:	d1dd      	bne.n	8000a14 <_malloc_r+0x8c>
 8000a58:	f8c8 2000 	str.w	r2, [r8]
 8000a5c:	e7ec      	b.n	8000a38 <_malloc_r+0xb0>
 8000a5e:	4623      	mov	r3, r4
 8000a60:	6864      	ldr	r4, [r4, #4]
 8000a62:	e7ac      	b.n	80009be <_malloc_r+0x36>
 8000a64:	4634      	mov	r4, r6
 8000a66:	6876      	ldr	r6, [r6, #4]
 8000a68:	e7b4      	b.n	80009d4 <_malloc_r+0x4c>
 8000a6a:	4613      	mov	r3, r2
 8000a6c:	e7cc      	b.n	8000a08 <_malloc_r+0x80>
 8000a6e:	230c      	movs	r3, #12
 8000a70:	603b      	str	r3, [r7, #0]
 8000a72:	4638      	mov	r0, r7
 8000a74:	f000 f80e 	bl	8000a94 <__malloc_unlock>
 8000a78:	e797      	b.n	80009aa <_malloc_r+0x22>
 8000a7a:	6025      	str	r5, [r4, #0]
 8000a7c:	e7dc      	b.n	8000a38 <_malloc_r+0xb0>
 8000a7e:	605b      	str	r3, [r3, #4]
 8000a80:	deff      	udf	#255	; 0xff
 8000a82:	bf00      	nop
 8000a84:	200001e0 	.word	0x200001e0

08000a88 <__malloc_lock>:
 8000a88:	4801      	ldr	r0, [pc, #4]	; (8000a90 <__malloc_lock+0x8>)
 8000a8a:	f7ff bf0e 	b.w	80008aa <__retarget_lock_acquire_recursive>
 8000a8e:	bf00      	nop
 8000a90:	200001dc 	.word	0x200001dc

08000a94 <__malloc_unlock>:
 8000a94:	4801      	ldr	r0, [pc, #4]	; (8000a9c <__malloc_unlock+0x8>)
 8000a96:	f7ff bf09 	b.w	80008ac <__retarget_lock_release_recursive>
 8000a9a:	bf00      	nop
 8000a9c:	200001dc 	.word	0x200001dc

08000aa0 <__sfputc_r>:
 8000aa0:	6893      	ldr	r3, [r2, #8]
 8000aa2:	3b01      	subs	r3, #1
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	b410      	push	{r4}
 8000aa8:	6093      	str	r3, [r2, #8]
 8000aaa:	da08      	bge.n	8000abe <__sfputc_r+0x1e>
 8000aac:	6994      	ldr	r4, [r2, #24]
 8000aae:	42a3      	cmp	r3, r4
 8000ab0:	db01      	blt.n	8000ab6 <__sfputc_r+0x16>
 8000ab2:	290a      	cmp	r1, #10
 8000ab4:	d103      	bne.n	8000abe <__sfputc_r+0x1e>
 8000ab6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000aba:	f000 bb73 	b.w	80011a4 <__swbuf_r>
 8000abe:	6813      	ldr	r3, [r2, #0]
 8000ac0:	1c58      	adds	r0, r3, #1
 8000ac2:	6010      	str	r0, [r2, #0]
 8000ac4:	7019      	strb	r1, [r3, #0]
 8000ac6:	4608      	mov	r0, r1
 8000ac8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000acc:	4770      	bx	lr

08000ace <__sfputs_r>:
 8000ace:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad0:	4606      	mov	r6, r0
 8000ad2:	460f      	mov	r7, r1
 8000ad4:	4614      	mov	r4, r2
 8000ad6:	18d5      	adds	r5, r2, r3
 8000ad8:	42ac      	cmp	r4, r5
 8000ada:	d101      	bne.n	8000ae0 <__sfputs_r+0x12>
 8000adc:	2000      	movs	r0, #0
 8000ade:	e007      	b.n	8000af0 <__sfputs_r+0x22>
 8000ae0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ae4:	463a      	mov	r2, r7
 8000ae6:	4630      	mov	r0, r6
 8000ae8:	f7ff ffda 	bl	8000aa0 <__sfputc_r>
 8000aec:	1c43      	adds	r3, r0, #1
 8000aee:	d1f3      	bne.n	8000ad8 <__sfputs_r+0xa>
 8000af0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000af4 <_vfiprintf_r>:
 8000af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000af8:	460d      	mov	r5, r1
 8000afa:	b09d      	sub	sp, #116	; 0x74
 8000afc:	4614      	mov	r4, r2
 8000afe:	4698      	mov	r8, r3
 8000b00:	4606      	mov	r6, r0
 8000b02:	b118      	cbz	r0, 8000b0c <_vfiprintf_r+0x18>
 8000b04:	6a03      	ldr	r3, [r0, #32]
 8000b06:	b90b      	cbnz	r3, 8000b0c <_vfiprintf_r+0x18>
 8000b08:	f7ff fdca 	bl	80006a0 <__sinit>
 8000b0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b0e:	07d9      	lsls	r1, r3, #31
 8000b10:	d405      	bmi.n	8000b1e <_vfiprintf_r+0x2a>
 8000b12:	89ab      	ldrh	r3, [r5, #12]
 8000b14:	059a      	lsls	r2, r3, #22
 8000b16:	d402      	bmi.n	8000b1e <_vfiprintf_r+0x2a>
 8000b18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b1a:	f7ff fec6 	bl	80008aa <__retarget_lock_acquire_recursive>
 8000b1e:	89ab      	ldrh	r3, [r5, #12]
 8000b20:	071b      	lsls	r3, r3, #28
 8000b22:	d501      	bpl.n	8000b28 <_vfiprintf_r+0x34>
 8000b24:	692b      	ldr	r3, [r5, #16]
 8000b26:	b99b      	cbnz	r3, 8000b50 <_vfiprintf_r+0x5c>
 8000b28:	4629      	mov	r1, r5
 8000b2a:	4630      	mov	r0, r6
 8000b2c:	f000 fb78 	bl	8001220 <__swsetup_r>
 8000b30:	b170      	cbz	r0, 8000b50 <_vfiprintf_r+0x5c>
 8000b32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b34:	07dc      	lsls	r4, r3, #31
 8000b36:	d504      	bpl.n	8000b42 <_vfiprintf_r+0x4e>
 8000b38:	f04f 30ff 	mov.w	r0, #4294967295
 8000b3c:	b01d      	add	sp, #116	; 0x74
 8000b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b42:	89ab      	ldrh	r3, [r5, #12]
 8000b44:	0598      	lsls	r0, r3, #22
 8000b46:	d4f7      	bmi.n	8000b38 <_vfiprintf_r+0x44>
 8000b48:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b4a:	f7ff feaf 	bl	80008ac <__retarget_lock_release_recursive>
 8000b4e:	e7f3      	b.n	8000b38 <_vfiprintf_r+0x44>
 8000b50:	2300      	movs	r3, #0
 8000b52:	9309      	str	r3, [sp, #36]	; 0x24
 8000b54:	2320      	movs	r3, #32
 8000b56:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b5a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b5e:	2330      	movs	r3, #48	; 0x30
 8000b60:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000d14 <_vfiprintf_r+0x220>
 8000b64:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b68:	f04f 0901 	mov.w	r9, #1
 8000b6c:	4623      	mov	r3, r4
 8000b6e:	469a      	mov	sl, r3
 8000b70:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b74:	b10a      	cbz	r2, 8000b7a <_vfiprintf_r+0x86>
 8000b76:	2a25      	cmp	r2, #37	; 0x25
 8000b78:	d1f9      	bne.n	8000b6e <_vfiprintf_r+0x7a>
 8000b7a:	ebba 0b04 	subs.w	fp, sl, r4
 8000b7e:	d00b      	beq.n	8000b98 <_vfiprintf_r+0xa4>
 8000b80:	465b      	mov	r3, fp
 8000b82:	4622      	mov	r2, r4
 8000b84:	4629      	mov	r1, r5
 8000b86:	4630      	mov	r0, r6
 8000b88:	f7ff ffa1 	bl	8000ace <__sfputs_r>
 8000b8c:	3001      	adds	r0, #1
 8000b8e:	f000 80a9 	beq.w	8000ce4 <_vfiprintf_r+0x1f0>
 8000b92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b94:	445a      	add	r2, fp
 8000b96:	9209      	str	r2, [sp, #36]	; 0x24
 8000b98:	f89a 3000 	ldrb.w	r3, [sl]
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	f000 80a1 	beq.w	8000ce4 <_vfiprintf_r+0x1f0>
 8000ba2:	2300      	movs	r3, #0
 8000ba4:	f04f 32ff 	mov.w	r2, #4294967295
 8000ba8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000bac:	f10a 0a01 	add.w	sl, sl, #1
 8000bb0:	9304      	str	r3, [sp, #16]
 8000bb2:	9307      	str	r3, [sp, #28]
 8000bb4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000bb8:	931a      	str	r3, [sp, #104]	; 0x68
 8000bba:	4654      	mov	r4, sl
 8000bbc:	2205      	movs	r2, #5
 8000bbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bc2:	4854      	ldr	r0, [pc, #336]	; (8000d14 <_vfiprintf_r+0x220>)
 8000bc4:	f7ff fb0c 	bl	80001e0 <memchr>
 8000bc8:	9a04      	ldr	r2, [sp, #16]
 8000bca:	b9d8      	cbnz	r0, 8000c04 <_vfiprintf_r+0x110>
 8000bcc:	06d1      	lsls	r1, r2, #27
 8000bce:	bf44      	itt	mi
 8000bd0:	2320      	movmi	r3, #32
 8000bd2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bd6:	0713      	lsls	r3, r2, #28
 8000bd8:	bf44      	itt	mi
 8000bda:	232b      	movmi	r3, #43	; 0x2b
 8000bdc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000be0:	f89a 3000 	ldrb.w	r3, [sl]
 8000be4:	2b2a      	cmp	r3, #42	; 0x2a
 8000be6:	d015      	beq.n	8000c14 <_vfiprintf_r+0x120>
 8000be8:	9a07      	ldr	r2, [sp, #28]
 8000bea:	4654      	mov	r4, sl
 8000bec:	2000      	movs	r0, #0
 8000bee:	f04f 0c0a 	mov.w	ip, #10
 8000bf2:	4621      	mov	r1, r4
 8000bf4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bf8:	3b30      	subs	r3, #48	; 0x30
 8000bfa:	2b09      	cmp	r3, #9
 8000bfc:	d94d      	bls.n	8000c9a <_vfiprintf_r+0x1a6>
 8000bfe:	b1b0      	cbz	r0, 8000c2e <_vfiprintf_r+0x13a>
 8000c00:	9207      	str	r2, [sp, #28]
 8000c02:	e014      	b.n	8000c2e <_vfiprintf_r+0x13a>
 8000c04:	eba0 0308 	sub.w	r3, r0, r8
 8000c08:	fa09 f303 	lsl.w	r3, r9, r3
 8000c0c:	4313      	orrs	r3, r2
 8000c0e:	9304      	str	r3, [sp, #16]
 8000c10:	46a2      	mov	sl, r4
 8000c12:	e7d2      	b.n	8000bba <_vfiprintf_r+0xc6>
 8000c14:	9b03      	ldr	r3, [sp, #12]
 8000c16:	1d19      	adds	r1, r3, #4
 8000c18:	681b      	ldr	r3, [r3, #0]
 8000c1a:	9103      	str	r1, [sp, #12]
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	bfbb      	ittet	lt
 8000c20:	425b      	neglt	r3, r3
 8000c22:	f042 0202 	orrlt.w	r2, r2, #2
 8000c26:	9307      	strge	r3, [sp, #28]
 8000c28:	9307      	strlt	r3, [sp, #28]
 8000c2a:	bfb8      	it	lt
 8000c2c:	9204      	strlt	r2, [sp, #16]
 8000c2e:	7823      	ldrb	r3, [r4, #0]
 8000c30:	2b2e      	cmp	r3, #46	; 0x2e
 8000c32:	d10c      	bne.n	8000c4e <_vfiprintf_r+0x15a>
 8000c34:	7863      	ldrb	r3, [r4, #1]
 8000c36:	2b2a      	cmp	r3, #42	; 0x2a
 8000c38:	d134      	bne.n	8000ca4 <_vfiprintf_r+0x1b0>
 8000c3a:	9b03      	ldr	r3, [sp, #12]
 8000c3c:	1d1a      	adds	r2, r3, #4
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	9203      	str	r2, [sp, #12]
 8000c42:	2b00      	cmp	r3, #0
 8000c44:	bfb8      	it	lt
 8000c46:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c4a:	3402      	adds	r4, #2
 8000c4c:	9305      	str	r3, [sp, #20]
 8000c4e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000d24 <_vfiprintf_r+0x230>
 8000c52:	7821      	ldrb	r1, [r4, #0]
 8000c54:	2203      	movs	r2, #3
 8000c56:	4650      	mov	r0, sl
 8000c58:	f7ff fac2 	bl	80001e0 <memchr>
 8000c5c:	b138      	cbz	r0, 8000c6e <_vfiprintf_r+0x17a>
 8000c5e:	9b04      	ldr	r3, [sp, #16]
 8000c60:	eba0 000a 	sub.w	r0, r0, sl
 8000c64:	2240      	movs	r2, #64	; 0x40
 8000c66:	4082      	lsls	r2, r0
 8000c68:	4313      	orrs	r3, r2
 8000c6a:	3401      	adds	r4, #1
 8000c6c:	9304      	str	r3, [sp, #16]
 8000c6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c72:	4829      	ldr	r0, [pc, #164]	; (8000d18 <_vfiprintf_r+0x224>)
 8000c74:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c78:	2206      	movs	r2, #6
 8000c7a:	f7ff fab1 	bl	80001e0 <memchr>
 8000c7e:	2800      	cmp	r0, #0
 8000c80:	d03f      	beq.n	8000d02 <_vfiprintf_r+0x20e>
 8000c82:	4b26      	ldr	r3, [pc, #152]	; (8000d1c <_vfiprintf_r+0x228>)
 8000c84:	bb1b      	cbnz	r3, 8000cce <_vfiprintf_r+0x1da>
 8000c86:	9b03      	ldr	r3, [sp, #12]
 8000c88:	3307      	adds	r3, #7
 8000c8a:	f023 0307 	bic.w	r3, r3, #7
 8000c8e:	3308      	adds	r3, #8
 8000c90:	9303      	str	r3, [sp, #12]
 8000c92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c94:	443b      	add	r3, r7
 8000c96:	9309      	str	r3, [sp, #36]	; 0x24
 8000c98:	e768      	b.n	8000b6c <_vfiprintf_r+0x78>
 8000c9a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c9e:	460c      	mov	r4, r1
 8000ca0:	2001      	movs	r0, #1
 8000ca2:	e7a6      	b.n	8000bf2 <_vfiprintf_r+0xfe>
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	3401      	adds	r4, #1
 8000ca8:	9305      	str	r3, [sp, #20]
 8000caa:	4619      	mov	r1, r3
 8000cac:	f04f 0c0a 	mov.w	ip, #10
 8000cb0:	4620      	mov	r0, r4
 8000cb2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000cb6:	3a30      	subs	r2, #48	; 0x30
 8000cb8:	2a09      	cmp	r2, #9
 8000cba:	d903      	bls.n	8000cc4 <_vfiprintf_r+0x1d0>
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d0c6      	beq.n	8000c4e <_vfiprintf_r+0x15a>
 8000cc0:	9105      	str	r1, [sp, #20]
 8000cc2:	e7c4      	b.n	8000c4e <_vfiprintf_r+0x15a>
 8000cc4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cc8:	4604      	mov	r4, r0
 8000cca:	2301      	movs	r3, #1
 8000ccc:	e7f0      	b.n	8000cb0 <_vfiprintf_r+0x1bc>
 8000cce:	ab03      	add	r3, sp, #12
 8000cd0:	9300      	str	r3, [sp, #0]
 8000cd2:	462a      	mov	r2, r5
 8000cd4:	4b12      	ldr	r3, [pc, #72]	; (8000d20 <_vfiprintf_r+0x22c>)
 8000cd6:	a904      	add	r1, sp, #16
 8000cd8:	4630      	mov	r0, r6
 8000cda:	f3af 8000 	nop.w
 8000cde:	4607      	mov	r7, r0
 8000ce0:	1c78      	adds	r0, r7, #1
 8000ce2:	d1d6      	bne.n	8000c92 <_vfiprintf_r+0x19e>
 8000ce4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ce6:	07d9      	lsls	r1, r3, #31
 8000ce8:	d405      	bmi.n	8000cf6 <_vfiprintf_r+0x202>
 8000cea:	89ab      	ldrh	r3, [r5, #12]
 8000cec:	059a      	lsls	r2, r3, #22
 8000cee:	d402      	bmi.n	8000cf6 <_vfiprintf_r+0x202>
 8000cf0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cf2:	f7ff fddb 	bl	80008ac <__retarget_lock_release_recursive>
 8000cf6:	89ab      	ldrh	r3, [r5, #12]
 8000cf8:	065b      	lsls	r3, r3, #25
 8000cfa:	f53f af1d 	bmi.w	8000b38 <_vfiprintf_r+0x44>
 8000cfe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d00:	e71c      	b.n	8000b3c <_vfiprintf_r+0x48>
 8000d02:	ab03      	add	r3, sp, #12
 8000d04:	9300      	str	r3, [sp, #0]
 8000d06:	462a      	mov	r2, r5
 8000d08:	4b05      	ldr	r3, [pc, #20]	; (8000d20 <_vfiprintf_r+0x22c>)
 8000d0a:	a904      	add	r1, sp, #16
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	f000 f879 	bl	8000e04 <_printf_i>
 8000d12:	e7e4      	b.n	8000cde <_vfiprintf_r+0x1ea>
 8000d14:	08001429 	.word	0x08001429
 8000d18:	08001433 	.word	0x08001433
 8000d1c:	00000000 	.word	0x00000000
 8000d20:	08000acf 	.word	0x08000acf
 8000d24:	0800142f 	.word	0x0800142f

08000d28 <_printf_common>:
 8000d28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d2c:	4616      	mov	r6, r2
 8000d2e:	4699      	mov	r9, r3
 8000d30:	688a      	ldr	r2, [r1, #8]
 8000d32:	690b      	ldr	r3, [r1, #16]
 8000d34:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d38:	4293      	cmp	r3, r2
 8000d3a:	bfb8      	it	lt
 8000d3c:	4613      	movlt	r3, r2
 8000d3e:	6033      	str	r3, [r6, #0]
 8000d40:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d44:	4607      	mov	r7, r0
 8000d46:	460c      	mov	r4, r1
 8000d48:	b10a      	cbz	r2, 8000d4e <_printf_common+0x26>
 8000d4a:	3301      	adds	r3, #1
 8000d4c:	6033      	str	r3, [r6, #0]
 8000d4e:	6823      	ldr	r3, [r4, #0]
 8000d50:	0699      	lsls	r1, r3, #26
 8000d52:	bf42      	ittt	mi
 8000d54:	6833      	ldrmi	r3, [r6, #0]
 8000d56:	3302      	addmi	r3, #2
 8000d58:	6033      	strmi	r3, [r6, #0]
 8000d5a:	6825      	ldr	r5, [r4, #0]
 8000d5c:	f015 0506 	ands.w	r5, r5, #6
 8000d60:	d106      	bne.n	8000d70 <_printf_common+0x48>
 8000d62:	f104 0a19 	add.w	sl, r4, #25
 8000d66:	68e3      	ldr	r3, [r4, #12]
 8000d68:	6832      	ldr	r2, [r6, #0]
 8000d6a:	1a9b      	subs	r3, r3, r2
 8000d6c:	42ab      	cmp	r3, r5
 8000d6e:	dc26      	bgt.n	8000dbe <_printf_common+0x96>
 8000d70:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d74:	1e13      	subs	r3, r2, #0
 8000d76:	6822      	ldr	r2, [r4, #0]
 8000d78:	bf18      	it	ne
 8000d7a:	2301      	movne	r3, #1
 8000d7c:	0692      	lsls	r2, r2, #26
 8000d7e:	d42b      	bmi.n	8000dd8 <_printf_common+0xb0>
 8000d80:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d84:	4649      	mov	r1, r9
 8000d86:	4638      	mov	r0, r7
 8000d88:	47c0      	blx	r8
 8000d8a:	3001      	adds	r0, #1
 8000d8c:	d01e      	beq.n	8000dcc <_printf_common+0xa4>
 8000d8e:	6823      	ldr	r3, [r4, #0]
 8000d90:	6922      	ldr	r2, [r4, #16]
 8000d92:	f003 0306 	and.w	r3, r3, #6
 8000d96:	2b04      	cmp	r3, #4
 8000d98:	bf02      	ittt	eq
 8000d9a:	68e5      	ldreq	r5, [r4, #12]
 8000d9c:	6833      	ldreq	r3, [r6, #0]
 8000d9e:	1aed      	subeq	r5, r5, r3
 8000da0:	68a3      	ldr	r3, [r4, #8]
 8000da2:	bf0c      	ite	eq
 8000da4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000da8:	2500      	movne	r5, #0
 8000daa:	4293      	cmp	r3, r2
 8000dac:	bfc4      	itt	gt
 8000dae:	1a9b      	subgt	r3, r3, r2
 8000db0:	18ed      	addgt	r5, r5, r3
 8000db2:	2600      	movs	r6, #0
 8000db4:	341a      	adds	r4, #26
 8000db6:	42b5      	cmp	r5, r6
 8000db8:	d11a      	bne.n	8000df0 <_printf_common+0xc8>
 8000dba:	2000      	movs	r0, #0
 8000dbc:	e008      	b.n	8000dd0 <_printf_common+0xa8>
 8000dbe:	2301      	movs	r3, #1
 8000dc0:	4652      	mov	r2, sl
 8000dc2:	4649      	mov	r1, r9
 8000dc4:	4638      	mov	r0, r7
 8000dc6:	47c0      	blx	r8
 8000dc8:	3001      	adds	r0, #1
 8000dca:	d103      	bne.n	8000dd4 <_printf_common+0xac>
 8000dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8000dd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dd4:	3501      	adds	r5, #1
 8000dd6:	e7c6      	b.n	8000d66 <_printf_common+0x3e>
 8000dd8:	18e1      	adds	r1, r4, r3
 8000dda:	1c5a      	adds	r2, r3, #1
 8000ddc:	2030      	movs	r0, #48	; 0x30
 8000dde:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000de2:	4422      	add	r2, r4
 8000de4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000de8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000dec:	3302      	adds	r3, #2
 8000dee:	e7c7      	b.n	8000d80 <_printf_common+0x58>
 8000df0:	2301      	movs	r3, #1
 8000df2:	4622      	mov	r2, r4
 8000df4:	4649      	mov	r1, r9
 8000df6:	4638      	mov	r0, r7
 8000df8:	47c0      	blx	r8
 8000dfa:	3001      	adds	r0, #1
 8000dfc:	d0e6      	beq.n	8000dcc <_printf_common+0xa4>
 8000dfe:	3601      	adds	r6, #1
 8000e00:	e7d9      	b.n	8000db6 <_printf_common+0x8e>
	...

08000e04 <_printf_i>:
 8000e04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e08:	7e0f      	ldrb	r7, [r1, #24]
 8000e0a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000e0c:	2f78      	cmp	r7, #120	; 0x78
 8000e0e:	4691      	mov	r9, r2
 8000e10:	4680      	mov	r8, r0
 8000e12:	460c      	mov	r4, r1
 8000e14:	469a      	mov	sl, r3
 8000e16:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000e1a:	d807      	bhi.n	8000e2c <_printf_i+0x28>
 8000e1c:	2f62      	cmp	r7, #98	; 0x62
 8000e1e:	d80a      	bhi.n	8000e36 <_printf_i+0x32>
 8000e20:	2f00      	cmp	r7, #0
 8000e22:	f000 80d4 	beq.w	8000fce <_printf_i+0x1ca>
 8000e26:	2f58      	cmp	r7, #88	; 0x58
 8000e28:	f000 80c0 	beq.w	8000fac <_printf_i+0x1a8>
 8000e2c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e30:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e34:	e03a      	b.n	8000eac <_printf_i+0xa8>
 8000e36:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e3a:	2b15      	cmp	r3, #21
 8000e3c:	d8f6      	bhi.n	8000e2c <_printf_i+0x28>
 8000e3e:	a101      	add	r1, pc, #4	; (adr r1, 8000e44 <_printf_i+0x40>)
 8000e40:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e44:	08000e9d 	.word	0x08000e9d
 8000e48:	08000eb1 	.word	0x08000eb1
 8000e4c:	08000e2d 	.word	0x08000e2d
 8000e50:	08000e2d 	.word	0x08000e2d
 8000e54:	08000e2d 	.word	0x08000e2d
 8000e58:	08000e2d 	.word	0x08000e2d
 8000e5c:	08000eb1 	.word	0x08000eb1
 8000e60:	08000e2d 	.word	0x08000e2d
 8000e64:	08000e2d 	.word	0x08000e2d
 8000e68:	08000e2d 	.word	0x08000e2d
 8000e6c:	08000e2d 	.word	0x08000e2d
 8000e70:	08000fb5 	.word	0x08000fb5
 8000e74:	08000edd 	.word	0x08000edd
 8000e78:	08000f6f 	.word	0x08000f6f
 8000e7c:	08000e2d 	.word	0x08000e2d
 8000e80:	08000e2d 	.word	0x08000e2d
 8000e84:	08000fd7 	.word	0x08000fd7
 8000e88:	08000e2d 	.word	0x08000e2d
 8000e8c:	08000edd 	.word	0x08000edd
 8000e90:	08000e2d 	.word	0x08000e2d
 8000e94:	08000e2d 	.word	0x08000e2d
 8000e98:	08000f77 	.word	0x08000f77
 8000e9c:	682b      	ldr	r3, [r5, #0]
 8000e9e:	1d1a      	adds	r2, r3, #4
 8000ea0:	681b      	ldr	r3, [r3, #0]
 8000ea2:	602a      	str	r2, [r5, #0]
 8000ea4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ea8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000eac:	2301      	movs	r3, #1
 8000eae:	e09f      	b.n	8000ff0 <_printf_i+0x1ec>
 8000eb0:	6820      	ldr	r0, [r4, #0]
 8000eb2:	682b      	ldr	r3, [r5, #0]
 8000eb4:	0607      	lsls	r7, r0, #24
 8000eb6:	f103 0104 	add.w	r1, r3, #4
 8000eba:	6029      	str	r1, [r5, #0]
 8000ebc:	d501      	bpl.n	8000ec2 <_printf_i+0xbe>
 8000ebe:	681e      	ldr	r6, [r3, #0]
 8000ec0:	e003      	b.n	8000eca <_printf_i+0xc6>
 8000ec2:	0646      	lsls	r6, r0, #25
 8000ec4:	d5fb      	bpl.n	8000ebe <_printf_i+0xba>
 8000ec6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000eca:	2e00      	cmp	r6, #0
 8000ecc:	da03      	bge.n	8000ed6 <_printf_i+0xd2>
 8000ece:	232d      	movs	r3, #45	; 0x2d
 8000ed0:	4276      	negs	r6, r6
 8000ed2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ed6:	485a      	ldr	r0, [pc, #360]	; (8001040 <_printf_i+0x23c>)
 8000ed8:	230a      	movs	r3, #10
 8000eda:	e012      	b.n	8000f02 <_printf_i+0xfe>
 8000edc:	682b      	ldr	r3, [r5, #0]
 8000ede:	6820      	ldr	r0, [r4, #0]
 8000ee0:	1d19      	adds	r1, r3, #4
 8000ee2:	6029      	str	r1, [r5, #0]
 8000ee4:	0605      	lsls	r5, r0, #24
 8000ee6:	d501      	bpl.n	8000eec <_printf_i+0xe8>
 8000ee8:	681e      	ldr	r6, [r3, #0]
 8000eea:	e002      	b.n	8000ef2 <_printf_i+0xee>
 8000eec:	0641      	lsls	r1, r0, #25
 8000eee:	d5fb      	bpl.n	8000ee8 <_printf_i+0xe4>
 8000ef0:	881e      	ldrh	r6, [r3, #0]
 8000ef2:	4853      	ldr	r0, [pc, #332]	; (8001040 <_printf_i+0x23c>)
 8000ef4:	2f6f      	cmp	r7, #111	; 0x6f
 8000ef6:	bf0c      	ite	eq
 8000ef8:	2308      	moveq	r3, #8
 8000efa:	230a      	movne	r3, #10
 8000efc:	2100      	movs	r1, #0
 8000efe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f02:	6865      	ldr	r5, [r4, #4]
 8000f04:	60a5      	str	r5, [r4, #8]
 8000f06:	2d00      	cmp	r5, #0
 8000f08:	bfa2      	ittt	ge
 8000f0a:	6821      	ldrge	r1, [r4, #0]
 8000f0c:	f021 0104 	bicge.w	r1, r1, #4
 8000f10:	6021      	strge	r1, [r4, #0]
 8000f12:	b90e      	cbnz	r6, 8000f18 <_printf_i+0x114>
 8000f14:	2d00      	cmp	r5, #0
 8000f16:	d04b      	beq.n	8000fb0 <_printf_i+0x1ac>
 8000f18:	4615      	mov	r5, r2
 8000f1a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000f1e:	fb03 6711 	mls	r7, r3, r1, r6
 8000f22:	5dc7      	ldrb	r7, [r0, r7]
 8000f24:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000f28:	4637      	mov	r7, r6
 8000f2a:	42bb      	cmp	r3, r7
 8000f2c:	460e      	mov	r6, r1
 8000f2e:	d9f4      	bls.n	8000f1a <_printf_i+0x116>
 8000f30:	2b08      	cmp	r3, #8
 8000f32:	d10b      	bne.n	8000f4c <_printf_i+0x148>
 8000f34:	6823      	ldr	r3, [r4, #0]
 8000f36:	07de      	lsls	r6, r3, #31
 8000f38:	d508      	bpl.n	8000f4c <_printf_i+0x148>
 8000f3a:	6923      	ldr	r3, [r4, #16]
 8000f3c:	6861      	ldr	r1, [r4, #4]
 8000f3e:	4299      	cmp	r1, r3
 8000f40:	bfde      	ittt	le
 8000f42:	2330      	movle	r3, #48	; 0x30
 8000f44:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f48:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f4c:	1b52      	subs	r2, r2, r5
 8000f4e:	6122      	str	r2, [r4, #16]
 8000f50:	f8cd a000 	str.w	sl, [sp]
 8000f54:	464b      	mov	r3, r9
 8000f56:	aa03      	add	r2, sp, #12
 8000f58:	4621      	mov	r1, r4
 8000f5a:	4640      	mov	r0, r8
 8000f5c:	f7ff fee4 	bl	8000d28 <_printf_common>
 8000f60:	3001      	adds	r0, #1
 8000f62:	d14a      	bne.n	8000ffa <_printf_i+0x1f6>
 8000f64:	f04f 30ff 	mov.w	r0, #4294967295
 8000f68:	b004      	add	sp, #16
 8000f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	f043 0320 	orr.w	r3, r3, #32
 8000f74:	6023      	str	r3, [r4, #0]
 8000f76:	4833      	ldr	r0, [pc, #204]	; (8001044 <_printf_i+0x240>)
 8000f78:	2778      	movs	r7, #120	; 0x78
 8000f7a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f7e:	6823      	ldr	r3, [r4, #0]
 8000f80:	6829      	ldr	r1, [r5, #0]
 8000f82:	061f      	lsls	r7, r3, #24
 8000f84:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f88:	d402      	bmi.n	8000f90 <_printf_i+0x18c>
 8000f8a:	065f      	lsls	r7, r3, #25
 8000f8c:	bf48      	it	mi
 8000f8e:	b2b6      	uxthmi	r6, r6
 8000f90:	07df      	lsls	r7, r3, #31
 8000f92:	bf48      	it	mi
 8000f94:	f043 0320 	orrmi.w	r3, r3, #32
 8000f98:	6029      	str	r1, [r5, #0]
 8000f9a:	bf48      	it	mi
 8000f9c:	6023      	strmi	r3, [r4, #0]
 8000f9e:	b91e      	cbnz	r6, 8000fa8 <_printf_i+0x1a4>
 8000fa0:	6823      	ldr	r3, [r4, #0]
 8000fa2:	f023 0320 	bic.w	r3, r3, #32
 8000fa6:	6023      	str	r3, [r4, #0]
 8000fa8:	2310      	movs	r3, #16
 8000faa:	e7a7      	b.n	8000efc <_printf_i+0xf8>
 8000fac:	4824      	ldr	r0, [pc, #144]	; (8001040 <_printf_i+0x23c>)
 8000fae:	e7e4      	b.n	8000f7a <_printf_i+0x176>
 8000fb0:	4615      	mov	r5, r2
 8000fb2:	e7bd      	b.n	8000f30 <_printf_i+0x12c>
 8000fb4:	682b      	ldr	r3, [r5, #0]
 8000fb6:	6826      	ldr	r6, [r4, #0]
 8000fb8:	6961      	ldr	r1, [r4, #20]
 8000fba:	1d18      	adds	r0, r3, #4
 8000fbc:	6028      	str	r0, [r5, #0]
 8000fbe:	0635      	lsls	r5, r6, #24
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	d501      	bpl.n	8000fc8 <_printf_i+0x1c4>
 8000fc4:	6019      	str	r1, [r3, #0]
 8000fc6:	e002      	b.n	8000fce <_printf_i+0x1ca>
 8000fc8:	0670      	lsls	r0, r6, #25
 8000fca:	d5fb      	bpl.n	8000fc4 <_printf_i+0x1c0>
 8000fcc:	8019      	strh	r1, [r3, #0]
 8000fce:	2300      	movs	r3, #0
 8000fd0:	6123      	str	r3, [r4, #16]
 8000fd2:	4615      	mov	r5, r2
 8000fd4:	e7bc      	b.n	8000f50 <_printf_i+0x14c>
 8000fd6:	682b      	ldr	r3, [r5, #0]
 8000fd8:	1d1a      	adds	r2, r3, #4
 8000fda:	602a      	str	r2, [r5, #0]
 8000fdc:	681d      	ldr	r5, [r3, #0]
 8000fde:	6862      	ldr	r2, [r4, #4]
 8000fe0:	2100      	movs	r1, #0
 8000fe2:	4628      	mov	r0, r5
 8000fe4:	f7ff f8fc 	bl	80001e0 <memchr>
 8000fe8:	b108      	cbz	r0, 8000fee <_printf_i+0x1ea>
 8000fea:	1b40      	subs	r0, r0, r5
 8000fec:	6060      	str	r0, [r4, #4]
 8000fee:	6863      	ldr	r3, [r4, #4]
 8000ff0:	6123      	str	r3, [r4, #16]
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ff8:	e7aa      	b.n	8000f50 <_printf_i+0x14c>
 8000ffa:	6923      	ldr	r3, [r4, #16]
 8000ffc:	462a      	mov	r2, r5
 8000ffe:	4649      	mov	r1, r9
 8001000:	4640      	mov	r0, r8
 8001002:	47d0      	blx	sl
 8001004:	3001      	adds	r0, #1
 8001006:	d0ad      	beq.n	8000f64 <_printf_i+0x160>
 8001008:	6823      	ldr	r3, [r4, #0]
 800100a:	079b      	lsls	r3, r3, #30
 800100c:	d413      	bmi.n	8001036 <_printf_i+0x232>
 800100e:	68e0      	ldr	r0, [r4, #12]
 8001010:	9b03      	ldr	r3, [sp, #12]
 8001012:	4298      	cmp	r0, r3
 8001014:	bfb8      	it	lt
 8001016:	4618      	movlt	r0, r3
 8001018:	e7a6      	b.n	8000f68 <_printf_i+0x164>
 800101a:	2301      	movs	r3, #1
 800101c:	4632      	mov	r2, r6
 800101e:	4649      	mov	r1, r9
 8001020:	4640      	mov	r0, r8
 8001022:	47d0      	blx	sl
 8001024:	3001      	adds	r0, #1
 8001026:	d09d      	beq.n	8000f64 <_printf_i+0x160>
 8001028:	3501      	adds	r5, #1
 800102a:	68e3      	ldr	r3, [r4, #12]
 800102c:	9903      	ldr	r1, [sp, #12]
 800102e:	1a5b      	subs	r3, r3, r1
 8001030:	42ab      	cmp	r3, r5
 8001032:	dcf2      	bgt.n	800101a <_printf_i+0x216>
 8001034:	e7eb      	b.n	800100e <_printf_i+0x20a>
 8001036:	2500      	movs	r5, #0
 8001038:	f104 0619 	add.w	r6, r4, #25
 800103c:	e7f5      	b.n	800102a <_printf_i+0x226>
 800103e:	bf00      	nop
 8001040:	0800143a 	.word	0x0800143a
 8001044:	0800144b 	.word	0x0800144b

08001048 <__sflush_r>:
 8001048:	898a      	ldrh	r2, [r1, #12]
 800104a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800104e:	4605      	mov	r5, r0
 8001050:	0710      	lsls	r0, r2, #28
 8001052:	460c      	mov	r4, r1
 8001054:	d458      	bmi.n	8001108 <__sflush_r+0xc0>
 8001056:	684b      	ldr	r3, [r1, #4]
 8001058:	2b00      	cmp	r3, #0
 800105a:	dc05      	bgt.n	8001068 <__sflush_r+0x20>
 800105c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800105e:	2b00      	cmp	r3, #0
 8001060:	dc02      	bgt.n	8001068 <__sflush_r+0x20>
 8001062:	2000      	movs	r0, #0
 8001064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001068:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800106a:	2e00      	cmp	r6, #0
 800106c:	d0f9      	beq.n	8001062 <__sflush_r+0x1a>
 800106e:	2300      	movs	r3, #0
 8001070:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001074:	682f      	ldr	r7, [r5, #0]
 8001076:	6a21      	ldr	r1, [r4, #32]
 8001078:	602b      	str	r3, [r5, #0]
 800107a:	d032      	beq.n	80010e2 <__sflush_r+0x9a>
 800107c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800107e:	89a3      	ldrh	r3, [r4, #12]
 8001080:	075a      	lsls	r2, r3, #29
 8001082:	d505      	bpl.n	8001090 <__sflush_r+0x48>
 8001084:	6863      	ldr	r3, [r4, #4]
 8001086:	1ac0      	subs	r0, r0, r3
 8001088:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800108a:	b10b      	cbz	r3, 8001090 <__sflush_r+0x48>
 800108c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800108e:	1ac0      	subs	r0, r0, r3
 8001090:	2300      	movs	r3, #0
 8001092:	4602      	mov	r2, r0
 8001094:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001096:	6a21      	ldr	r1, [r4, #32]
 8001098:	4628      	mov	r0, r5
 800109a:	47b0      	blx	r6
 800109c:	1c43      	adds	r3, r0, #1
 800109e:	89a3      	ldrh	r3, [r4, #12]
 80010a0:	d106      	bne.n	80010b0 <__sflush_r+0x68>
 80010a2:	6829      	ldr	r1, [r5, #0]
 80010a4:	291d      	cmp	r1, #29
 80010a6:	d82b      	bhi.n	8001100 <__sflush_r+0xb8>
 80010a8:	4a29      	ldr	r2, [pc, #164]	; (8001150 <__sflush_r+0x108>)
 80010aa:	410a      	asrs	r2, r1
 80010ac:	07d6      	lsls	r6, r2, #31
 80010ae:	d427      	bmi.n	8001100 <__sflush_r+0xb8>
 80010b0:	2200      	movs	r2, #0
 80010b2:	6062      	str	r2, [r4, #4]
 80010b4:	04d9      	lsls	r1, r3, #19
 80010b6:	6922      	ldr	r2, [r4, #16]
 80010b8:	6022      	str	r2, [r4, #0]
 80010ba:	d504      	bpl.n	80010c6 <__sflush_r+0x7e>
 80010bc:	1c42      	adds	r2, r0, #1
 80010be:	d101      	bne.n	80010c4 <__sflush_r+0x7c>
 80010c0:	682b      	ldr	r3, [r5, #0]
 80010c2:	b903      	cbnz	r3, 80010c6 <__sflush_r+0x7e>
 80010c4:	6560      	str	r0, [r4, #84]	; 0x54
 80010c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010c8:	602f      	str	r7, [r5, #0]
 80010ca:	2900      	cmp	r1, #0
 80010cc:	d0c9      	beq.n	8001062 <__sflush_r+0x1a>
 80010ce:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010d2:	4299      	cmp	r1, r3
 80010d4:	d002      	beq.n	80010dc <__sflush_r+0x94>
 80010d6:	4628      	mov	r0, r5
 80010d8:	f7ff fbea 	bl	80008b0 <_free_r>
 80010dc:	2000      	movs	r0, #0
 80010de:	6360      	str	r0, [r4, #52]	; 0x34
 80010e0:	e7c0      	b.n	8001064 <__sflush_r+0x1c>
 80010e2:	2301      	movs	r3, #1
 80010e4:	4628      	mov	r0, r5
 80010e6:	47b0      	blx	r6
 80010e8:	1c41      	adds	r1, r0, #1
 80010ea:	d1c8      	bne.n	800107e <__sflush_r+0x36>
 80010ec:	682b      	ldr	r3, [r5, #0]
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d0c5      	beq.n	800107e <__sflush_r+0x36>
 80010f2:	2b1d      	cmp	r3, #29
 80010f4:	d001      	beq.n	80010fa <__sflush_r+0xb2>
 80010f6:	2b16      	cmp	r3, #22
 80010f8:	d101      	bne.n	80010fe <__sflush_r+0xb6>
 80010fa:	602f      	str	r7, [r5, #0]
 80010fc:	e7b1      	b.n	8001062 <__sflush_r+0x1a>
 80010fe:	89a3      	ldrh	r3, [r4, #12]
 8001100:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001104:	81a3      	strh	r3, [r4, #12]
 8001106:	e7ad      	b.n	8001064 <__sflush_r+0x1c>
 8001108:	690f      	ldr	r7, [r1, #16]
 800110a:	2f00      	cmp	r7, #0
 800110c:	d0a9      	beq.n	8001062 <__sflush_r+0x1a>
 800110e:	0793      	lsls	r3, r2, #30
 8001110:	680e      	ldr	r6, [r1, #0]
 8001112:	bf08      	it	eq
 8001114:	694b      	ldreq	r3, [r1, #20]
 8001116:	600f      	str	r7, [r1, #0]
 8001118:	bf18      	it	ne
 800111a:	2300      	movne	r3, #0
 800111c:	eba6 0807 	sub.w	r8, r6, r7
 8001120:	608b      	str	r3, [r1, #8]
 8001122:	f1b8 0f00 	cmp.w	r8, #0
 8001126:	dd9c      	ble.n	8001062 <__sflush_r+0x1a>
 8001128:	6a21      	ldr	r1, [r4, #32]
 800112a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800112c:	4643      	mov	r3, r8
 800112e:	463a      	mov	r2, r7
 8001130:	4628      	mov	r0, r5
 8001132:	47b0      	blx	r6
 8001134:	2800      	cmp	r0, #0
 8001136:	dc06      	bgt.n	8001146 <__sflush_r+0xfe>
 8001138:	89a3      	ldrh	r3, [r4, #12]
 800113a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800113e:	81a3      	strh	r3, [r4, #12]
 8001140:	f04f 30ff 	mov.w	r0, #4294967295
 8001144:	e78e      	b.n	8001064 <__sflush_r+0x1c>
 8001146:	4407      	add	r7, r0
 8001148:	eba8 0800 	sub.w	r8, r8, r0
 800114c:	e7e9      	b.n	8001122 <__sflush_r+0xda>
 800114e:	bf00      	nop
 8001150:	dfbffffe 	.word	0xdfbffffe

08001154 <_fflush_r>:
 8001154:	b538      	push	{r3, r4, r5, lr}
 8001156:	690b      	ldr	r3, [r1, #16]
 8001158:	4605      	mov	r5, r0
 800115a:	460c      	mov	r4, r1
 800115c:	b913      	cbnz	r3, 8001164 <_fflush_r+0x10>
 800115e:	2500      	movs	r5, #0
 8001160:	4628      	mov	r0, r5
 8001162:	bd38      	pop	{r3, r4, r5, pc}
 8001164:	b118      	cbz	r0, 800116e <_fflush_r+0x1a>
 8001166:	6a03      	ldr	r3, [r0, #32]
 8001168:	b90b      	cbnz	r3, 800116e <_fflush_r+0x1a>
 800116a:	f7ff fa99 	bl	80006a0 <__sinit>
 800116e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001172:	2b00      	cmp	r3, #0
 8001174:	d0f3      	beq.n	800115e <_fflush_r+0xa>
 8001176:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001178:	07d0      	lsls	r0, r2, #31
 800117a:	d404      	bmi.n	8001186 <_fflush_r+0x32>
 800117c:	0599      	lsls	r1, r3, #22
 800117e:	d402      	bmi.n	8001186 <_fflush_r+0x32>
 8001180:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001182:	f7ff fb92 	bl	80008aa <__retarget_lock_acquire_recursive>
 8001186:	4628      	mov	r0, r5
 8001188:	4621      	mov	r1, r4
 800118a:	f7ff ff5d 	bl	8001048 <__sflush_r>
 800118e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001190:	07da      	lsls	r2, r3, #31
 8001192:	4605      	mov	r5, r0
 8001194:	d4e4      	bmi.n	8001160 <_fflush_r+0xc>
 8001196:	89a3      	ldrh	r3, [r4, #12]
 8001198:	059b      	lsls	r3, r3, #22
 800119a:	d4e1      	bmi.n	8001160 <_fflush_r+0xc>
 800119c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800119e:	f7ff fb85 	bl	80008ac <__retarget_lock_release_recursive>
 80011a2:	e7dd      	b.n	8001160 <_fflush_r+0xc>

080011a4 <__swbuf_r>:
 80011a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011a6:	460e      	mov	r6, r1
 80011a8:	4614      	mov	r4, r2
 80011aa:	4605      	mov	r5, r0
 80011ac:	b118      	cbz	r0, 80011b6 <__swbuf_r+0x12>
 80011ae:	6a03      	ldr	r3, [r0, #32]
 80011b0:	b90b      	cbnz	r3, 80011b6 <__swbuf_r+0x12>
 80011b2:	f7ff fa75 	bl	80006a0 <__sinit>
 80011b6:	69a3      	ldr	r3, [r4, #24]
 80011b8:	60a3      	str	r3, [r4, #8]
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	071a      	lsls	r2, r3, #28
 80011be:	d525      	bpl.n	800120c <__swbuf_r+0x68>
 80011c0:	6923      	ldr	r3, [r4, #16]
 80011c2:	b31b      	cbz	r3, 800120c <__swbuf_r+0x68>
 80011c4:	6823      	ldr	r3, [r4, #0]
 80011c6:	6922      	ldr	r2, [r4, #16]
 80011c8:	1a98      	subs	r0, r3, r2
 80011ca:	6963      	ldr	r3, [r4, #20]
 80011cc:	b2f6      	uxtb	r6, r6
 80011ce:	4283      	cmp	r3, r0
 80011d0:	4637      	mov	r7, r6
 80011d2:	dc04      	bgt.n	80011de <__swbuf_r+0x3a>
 80011d4:	4621      	mov	r1, r4
 80011d6:	4628      	mov	r0, r5
 80011d8:	f7ff ffbc 	bl	8001154 <_fflush_r>
 80011dc:	b9e0      	cbnz	r0, 8001218 <__swbuf_r+0x74>
 80011de:	68a3      	ldr	r3, [r4, #8]
 80011e0:	3b01      	subs	r3, #1
 80011e2:	60a3      	str	r3, [r4, #8]
 80011e4:	6823      	ldr	r3, [r4, #0]
 80011e6:	1c5a      	adds	r2, r3, #1
 80011e8:	6022      	str	r2, [r4, #0]
 80011ea:	701e      	strb	r6, [r3, #0]
 80011ec:	6962      	ldr	r2, [r4, #20]
 80011ee:	1c43      	adds	r3, r0, #1
 80011f0:	429a      	cmp	r2, r3
 80011f2:	d004      	beq.n	80011fe <__swbuf_r+0x5a>
 80011f4:	89a3      	ldrh	r3, [r4, #12]
 80011f6:	07db      	lsls	r3, r3, #31
 80011f8:	d506      	bpl.n	8001208 <__swbuf_r+0x64>
 80011fa:	2e0a      	cmp	r6, #10
 80011fc:	d104      	bne.n	8001208 <__swbuf_r+0x64>
 80011fe:	4621      	mov	r1, r4
 8001200:	4628      	mov	r0, r5
 8001202:	f7ff ffa7 	bl	8001154 <_fflush_r>
 8001206:	b938      	cbnz	r0, 8001218 <__swbuf_r+0x74>
 8001208:	4638      	mov	r0, r7
 800120a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800120c:	4621      	mov	r1, r4
 800120e:	4628      	mov	r0, r5
 8001210:	f000 f806 	bl	8001220 <__swsetup_r>
 8001214:	2800      	cmp	r0, #0
 8001216:	d0d5      	beq.n	80011c4 <__swbuf_r+0x20>
 8001218:	f04f 37ff 	mov.w	r7, #4294967295
 800121c:	e7f4      	b.n	8001208 <__swbuf_r+0x64>
	...

08001220 <__swsetup_r>:
 8001220:	b538      	push	{r3, r4, r5, lr}
 8001222:	4b2a      	ldr	r3, [pc, #168]	; (80012cc <__swsetup_r+0xac>)
 8001224:	4605      	mov	r5, r0
 8001226:	6818      	ldr	r0, [r3, #0]
 8001228:	460c      	mov	r4, r1
 800122a:	b118      	cbz	r0, 8001234 <__swsetup_r+0x14>
 800122c:	6a03      	ldr	r3, [r0, #32]
 800122e:	b90b      	cbnz	r3, 8001234 <__swsetup_r+0x14>
 8001230:	f7ff fa36 	bl	80006a0 <__sinit>
 8001234:	89a3      	ldrh	r3, [r4, #12]
 8001236:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800123a:	0718      	lsls	r0, r3, #28
 800123c:	d422      	bmi.n	8001284 <__swsetup_r+0x64>
 800123e:	06d9      	lsls	r1, r3, #27
 8001240:	d407      	bmi.n	8001252 <__swsetup_r+0x32>
 8001242:	2309      	movs	r3, #9
 8001244:	602b      	str	r3, [r5, #0]
 8001246:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800124a:	81a3      	strh	r3, [r4, #12]
 800124c:	f04f 30ff 	mov.w	r0, #4294967295
 8001250:	e034      	b.n	80012bc <__swsetup_r+0x9c>
 8001252:	0758      	lsls	r0, r3, #29
 8001254:	d512      	bpl.n	800127c <__swsetup_r+0x5c>
 8001256:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001258:	b141      	cbz	r1, 800126c <__swsetup_r+0x4c>
 800125a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800125e:	4299      	cmp	r1, r3
 8001260:	d002      	beq.n	8001268 <__swsetup_r+0x48>
 8001262:	4628      	mov	r0, r5
 8001264:	f7ff fb24 	bl	80008b0 <_free_r>
 8001268:	2300      	movs	r3, #0
 800126a:	6363      	str	r3, [r4, #52]	; 0x34
 800126c:	89a3      	ldrh	r3, [r4, #12]
 800126e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001272:	81a3      	strh	r3, [r4, #12]
 8001274:	2300      	movs	r3, #0
 8001276:	6063      	str	r3, [r4, #4]
 8001278:	6923      	ldr	r3, [r4, #16]
 800127a:	6023      	str	r3, [r4, #0]
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	f043 0308 	orr.w	r3, r3, #8
 8001282:	81a3      	strh	r3, [r4, #12]
 8001284:	6923      	ldr	r3, [r4, #16]
 8001286:	b94b      	cbnz	r3, 800129c <__swsetup_r+0x7c>
 8001288:	89a3      	ldrh	r3, [r4, #12]
 800128a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800128e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001292:	d003      	beq.n	800129c <__swsetup_r+0x7c>
 8001294:	4621      	mov	r1, r4
 8001296:	4628      	mov	r0, r5
 8001298:	f000 f850 	bl	800133c <__smakebuf_r>
 800129c:	89a0      	ldrh	r0, [r4, #12]
 800129e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80012a2:	f010 0301 	ands.w	r3, r0, #1
 80012a6:	d00a      	beq.n	80012be <__swsetup_r+0x9e>
 80012a8:	2300      	movs	r3, #0
 80012aa:	60a3      	str	r3, [r4, #8]
 80012ac:	6963      	ldr	r3, [r4, #20]
 80012ae:	425b      	negs	r3, r3
 80012b0:	61a3      	str	r3, [r4, #24]
 80012b2:	6923      	ldr	r3, [r4, #16]
 80012b4:	b943      	cbnz	r3, 80012c8 <__swsetup_r+0xa8>
 80012b6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80012ba:	d1c4      	bne.n	8001246 <__swsetup_r+0x26>
 80012bc:	bd38      	pop	{r3, r4, r5, pc}
 80012be:	0781      	lsls	r1, r0, #30
 80012c0:	bf58      	it	pl
 80012c2:	6963      	ldrpl	r3, [r4, #20]
 80012c4:	60a3      	str	r3, [r4, #8]
 80012c6:	e7f4      	b.n	80012b2 <__swsetup_r+0x92>
 80012c8:	2000      	movs	r0, #0
 80012ca:	e7f7      	b.n	80012bc <__swsetup_r+0x9c>
 80012cc:	20000070 	.word	0x20000070

080012d0 <_sbrk_r>:
 80012d0:	b538      	push	{r3, r4, r5, lr}
 80012d2:	4d06      	ldr	r5, [pc, #24]	; (80012ec <_sbrk_r+0x1c>)
 80012d4:	2300      	movs	r3, #0
 80012d6:	4604      	mov	r4, r0
 80012d8:	4608      	mov	r0, r1
 80012da:	602b      	str	r3, [r5, #0]
 80012dc:	f7ff f8f4 	bl	80004c8 <_sbrk>
 80012e0:	1c43      	adds	r3, r0, #1
 80012e2:	d102      	bne.n	80012ea <_sbrk_r+0x1a>
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	b103      	cbz	r3, 80012ea <_sbrk_r+0x1a>
 80012e8:	6023      	str	r3, [r4, #0]
 80012ea:	bd38      	pop	{r3, r4, r5, pc}
 80012ec:	200001d8 	.word	0x200001d8

080012f0 <__swhatbuf_r>:
 80012f0:	b570      	push	{r4, r5, r6, lr}
 80012f2:	460c      	mov	r4, r1
 80012f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012f8:	2900      	cmp	r1, #0
 80012fa:	b096      	sub	sp, #88	; 0x58
 80012fc:	4615      	mov	r5, r2
 80012fe:	461e      	mov	r6, r3
 8001300:	da0d      	bge.n	800131e <__swhatbuf_r+0x2e>
 8001302:	89a3      	ldrh	r3, [r4, #12]
 8001304:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001308:	f04f 0100 	mov.w	r1, #0
 800130c:	bf0c      	ite	eq
 800130e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001312:	2340      	movne	r3, #64	; 0x40
 8001314:	2000      	movs	r0, #0
 8001316:	6031      	str	r1, [r6, #0]
 8001318:	602b      	str	r3, [r5, #0]
 800131a:	b016      	add	sp, #88	; 0x58
 800131c:	bd70      	pop	{r4, r5, r6, pc}
 800131e:	466a      	mov	r2, sp
 8001320:	f000 f848 	bl	80013b4 <_fstat_r>
 8001324:	2800      	cmp	r0, #0
 8001326:	dbec      	blt.n	8001302 <__swhatbuf_r+0x12>
 8001328:	9901      	ldr	r1, [sp, #4]
 800132a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800132e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001332:	4259      	negs	r1, r3
 8001334:	4159      	adcs	r1, r3
 8001336:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800133a:	e7eb      	b.n	8001314 <__swhatbuf_r+0x24>

0800133c <__smakebuf_r>:
 800133c:	898b      	ldrh	r3, [r1, #12]
 800133e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001340:	079d      	lsls	r5, r3, #30
 8001342:	4606      	mov	r6, r0
 8001344:	460c      	mov	r4, r1
 8001346:	d507      	bpl.n	8001358 <__smakebuf_r+0x1c>
 8001348:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800134c:	6023      	str	r3, [r4, #0]
 800134e:	6123      	str	r3, [r4, #16]
 8001350:	2301      	movs	r3, #1
 8001352:	6163      	str	r3, [r4, #20]
 8001354:	b002      	add	sp, #8
 8001356:	bd70      	pop	{r4, r5, r6, pc}
 8001358:	ab01      	add	r3, sp, #4
 800135a:	466a      	mov	r2, sp
 800135c:	f7ff ffc8 	bl	80012f0 <__swhatbuf_r>
 8001360:	9900      	ldr	r1, [sp, #0]
 8001362:	4605      	mov	r5, r0
 8001364:	4630      	mov	r0, r6
 8001366:	f7ff fb0f 	bl	8000988 <_malloc_r>
 800136a:	b948      	cbnz	r0, 8001380 <__smakebuf_r+0x44>
 800136c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001370:	059a      	lsls	r2, r3, #22
 8001372:	d4ef      	bmi.n	8001354 <__smakebuf_r+0x18>
 8001374:	f023 0303 	bic.w	r3, r3, #3
 8001378:	f043 0302 	orr.w	r3, r3, #2
 800137c:	81a3      	strh	r3, [r4, #12]
 800137e:	e7e3      	b.n	8001348 <__smakebuf_r+0xc>
 8001380:	89a3      	ldrh	r3, [r4, #12]
 8001382:	6020      	str	r0, [r4, #0]
 8001384:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001388:	81a3      	strh	r3, [r4, #12]
 800138a:	9b00      	ldr	r3, [sp, #0]
 800138c:	6163      	str	r3, [r4, #20]
 800138e:	9b01      	ldr	r3, [sp, #4]
 8001390:	6120      	str	r0, [r4, #16]
 8001392:	b15b      	cbz	r3, 80013ac <__smakebuf_r+0x70>
 8001394:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001398:	4630      	mov	r0, r6
 800139a:	f000 f81d 	bl	80013d8 <_isatty_r>
 800139e:	b128      	cbz	r0, 80013ac <__smakebuf_r+0x70>
 80013a0:	89a3      	ldrh	r3, [r4, #12]
 80013a2:	f023 0303 	bic.w	r3, r3, #3
 80013a6:	f043 0301 	orr.w	r3, r3, #1
 80013aa:	81a3      	strh	r3, [r4, #12]
 80013ac:	89a3      	ldrh	r3, [r4, #12]
 80013ae:	431d      	orrs	r5, r3
 80013b0:	81a5      	strh	r5, [r4, #12]
 80013b2:	e7cf      	b.n	8001354 <__smakebuf_r+0x18>

080013b4 <_fstat_r>:
 80013b4:	b538      	push	{r3, r4, r5, lr}
 80013b6:	4d07      	ldr	r5, [pc, #28]	; (80013d4 <_fstat_r+0x20>)
 80013b8:	2300      	movs	r3, #0
 80013ba:	4604      	mov	r4, r0
 80013bc:	4608      	mov	r0, r1
 80013be:	4611      	mov	r1, r2
 80013c0:	602b      	str	r3, [r5, #0]
 80013c2:	f7ff f858 	bl	8000476 <_fstat>
 80013c6:	1c43      	adds	r3, r0, #1
 80013c8:	d102      	bne.n	80013d0 <_fstat_r+0x1c>
 80013ca:	682b      	ldr	r3, [r5, #0]
 80013cc:	b103      	cbz	r3, 80013d0 <_fstat_r+0x1c>
 80013ce:	6023      	str	r3, [r4, #0]
 80013d0:	bd38      	pop	{r3, r4, r5, pc}
 80013d2:	bf00      	nop
 80013d4:	200001d8 	.word	0x200001d8

080013d8 <_isatty_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4d06      	ldr	r5, [pc, #24]	; (80013f4 <_isatty_r+0x1c>)
 80013dc:	2300      	movs	r3, #0
 80013de:	4604      	mov	r4, r0
 80013e0:	4608      	mov	r0, r1
 80013e2:	602b      	str	r3, [r5, #0]
 80013e4:	f7ff f857 	bl	8000496 <_isatty>
 80013e8:	1c43      	adds	r3, r0, #1
 80013ea:	d102      	bne.n	80013f2 <_isatty_r+0x1a>
 80013ec:	682b      	ldr	r3, [r5, #0]
 80013ee:	b103      	cbz	r3, 80013f2 <_isatty_r+0x1a>
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	bd38      	pop	{r3, r4, r5, pc}
 80013f4:	200001d8 	.word	0x200001d8

080013f8 <_init>:
 80013f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013fa:	bf00      	nop
 80013fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013fe:	bc08      	pop	{r3}
 8001400:	469e      	mov	lr, r3
 8001402:	4770      	bx	lr

08001404 <_fini>:
 8001404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001406:	bf00      	nop
 8001408:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800140a:	bc08      	pop	{r3}
 800140c:	469e      	mov	lr, r3
 800140e:	4770      	bx	lr
