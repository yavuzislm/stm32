
001HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000bac  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000d44  08000d44  00010d44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d50  08000d50  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d50  08000d50  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d50  08000d50  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d50  08000d50  00010d50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d54  08000d54  00010d54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08000d58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000db4  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000db4  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008f1  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c6  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00020c88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00020da0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c9b  00000000  00000000  00020e5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000144a  00000000  00000000  00023af9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097ac  00000000  00000000  00024f43  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000009d0  00000000  00000000  0002e6f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  0002f0c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000005c 	.word	0x2000005c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000d2c 	.word	0x08000d2c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000060 	.word	0x20000060
 80001d4:	08000d2c 	.word	0x08000d2c

080001d8 <main>:

#include <stdint.h>
#include <stdio.h>

int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
    printf("Hello World\n");
 80001dc:	4801      	ldr	r0, [pc, #4]	; (80001e4 <main+0xc>)
 80001de:	f000 fa0f 	bl	8000600 <puts>
	for(;;);
 80001e2:	e7fe      	b.n	80001e2 <main+0xa>
 80001e4:	08000d44 	.word	0x08000d44

080001e8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001f2:	4b0f      	ldr	r3, [pc, #60]	; (8000230 <ITM_SendChar+0x48>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a0e      	ldr	r2, [pc, #56]	; (8000230 <ITM_SendChar+0x48>)
 80001f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001fc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001fe:	4b0d      	ldr	r3, [pc, #52]	; (8000234 <ITM_SendChar+0x4c>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a0c      	ldr	r2, [pc, #48]	; (8000234 <ITM_SendChar+0x4c>)
 8000204:	f043 0301 	orr.w	r3, r3, #1
 8000208:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800020a:	bf00      	nop
 800020c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f003 0301 	and.w	r3, r3, #1
 8000216:	2b00      	cmp	r3, #0
 8000218:	d0f8      	beq.n	800020c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800021a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800021e:	79fb      	ldrb	r3, [r7, #7]
 8000220:	6013      	str	r3, [r2, #0]
}
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	e000edfc 	.word	0xe000edfc
 8000234:	e0000e00 	.word	0xe0000e00

08000238 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b086      	sub	sp, #24
 800023c:	af00      	add	r7, sp, #0
 800023e:	60f8      	str	r0, [r7, #12]
 8000240:	60b9      	str	r1, [r7, #8]
 8000242:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000244:	2300      	movs	r3, #0
 8000246:	617b      	str	r3, [r7, #20]
 8000248:	e00a      	b.n	8000260 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800024a:	f3af 8000 	nop.w
 800024e:	4601      	mov	r1, r0
 8000250:	68bb      	ldr	r3, [r7, #8]
 8000252:	1c5a      	adds	r2, r3, #1
 8000254:	60ba      	str	r2, [r7, #8]
 8000256:	b2ca      	uxtb	r2, r1
 8000258:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800025a:	697b      	ldr	r3, [r7, #20]
 800025c:	3301      	adds	r3, #1
 800025e:	617b      	str	r3, [r7, #20]
 8000260:	697a      	ldr	r2, [r7, #20]
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	429a      	cmp	r2, r3
 8000266:	dbf0      	blt.n	800024a <_read+0x12>
  }

  return len;
 8000268:	687b      	ldr	r3, [r7, #4]
}
 800026a:	4618      	mov	r0, r3
 800026c:	3718      	adds	r7, #24
 800026e:	46bd      	mov	sp, r7
 8000270:	bd80      	pop	{r7, pc}

08000272 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000272:	b580      	push	{r7, lr}
 8000274:	b086      	sub	sp, #24
 8000276:	af00      	add	r7, sp, #0
 8000278:	60f8      	str	r0, [r7, #12]
 800027a:	60b9      	str	r1, [r7, #8]
 800027c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800027e:	2300      	movs	r3, #0
 8000280:	617b      	str	r3, [r7, #20]
 8000282:	e009      	b.n	8000298 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000284:	68bb      	ldr	r3, [r7, #8]
 8000286:	1c5a      	adds	r2, r3, #1
 8000288:	60ba      	str	r2, [r7, #8]
 800028a:	781b      	ldrb	r3, [r3, #0]
 800028c:	4618      	mov	r0, r3
 800028e:	f7ff ffab 	bl	80001e8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000292:	697b      	ldr	r3, [r7, #20]
 8000294:	3301      	adds	r3, #1
 8000296:	617b      	str	r3, [r7, #20]
 8000298:	697a      	ldr	r2, [r7, #20]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	429a      	cmp	r2, r3
 800029e:	dbf1      	blt.n	8000284 <_write+0x12>
  }
  return len;
 80002a0:	687b      	ldr	r3, [r7, #4]
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3718      	adds	r7, #24
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}

080002aa <_close>:

int _close(int file)
{
 80002aa:	b480      	push	{r7}
 80002ac:	b083      	sub	sp, #12
 80002ae:	af00      	add	r7, sp, #0
 80002b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80002b2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002b6:	4618      	mov	r0, r3
 80002b8:	370c      	adds	r7, #12
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr

080002c2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002c2:	b480      	push	{r7}
 80002c4:	b083      	sub	sp, #12
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	6078      	str	r0, [r7, #4]
 80002ca:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002cc:	683b      	ldr	r3, [r7, #0]
 80002ce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002d2:	605a      	str	r2, [r3, #4]
  return 0;
 80002d4:	2300      	movs	r3, #0
}
 80002d6:	4618      	mov	r0, r3
 80002d8:	370c      	adds	r7, #12
 80002da:	46bd      	mov	sp, r7
 80002dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e0:	4770      	bx	lr

080002e2 <_isatty>:

int _isatty(int file)
{
 80002e2:	b480      	push	{r7}
 80002e4:	b083      	sub	sp, #12
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002ea:	2301      	movs	r3, #1
}
 80002ec:	4618      	mov	r0, r3
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f6:	4770      	bx	lr

080002f8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002f8:	b480      	push	{r7}
 80002fa:	b085      	sub	sp, #20
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	60f8      	str	r0, [r7, #12]
 8000300:	60b9      	str	r1, [r7, #8]
 8000302:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000304:	2300      	movs	r3, #0
}
 8000306:	4618      	mov	r0, r3
 8000308:	3714      	adds	r7, #20
 800030a:	46bd      	mov	sp, r7
 800030c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000310:	4770      	bx	lr
	...

08000314 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000314:	b580      	push	{r7, lr}
 8000316:	b086      	sub	sp, #24
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800031c:	4a14      	ldr	r2, [pc, #80]	; (8000370 <_sbrk+0x5c>)
 800031e:	4b15      	ldr	r3, [pc, #84]	; (8000374 <_sbrk+0x60>)
 8000320:	1ad3      	subs	r3, r2, r3
 8000322:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000324:	697b      	ldr	r3, [r7, #20]
 8000326:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000328:	4b13      	ldr	r3, [pc, #76]	; (8000378 <_sbrk+0x64>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	2b00      	cmp	r3, #0
 800032e:	d102      	bne.n	8000336 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000330:	4b11      	ldr	r3, [pc, #68]	; (8000378 <_sbrk+0x64>)
 8000332:	4a12      	ldr	r2, [pc, #72]	; (800037c <_sbrk+0x68>)
 8000334:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000336:	4b10      	ldr	r3, [pc, #64]	; (8000378 <_sbrk+0x64>)
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4413      	add	r3, r2
 800033e:	693a      	ldr	r2, [r7, #16]
 8000340:	429a      	cmp	r2, r3
 8000342:	d207      	bcs.n	8000354 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000344:	f000 fa8a 	bl	800085c <__errno>
 8000348:	4603      	mov	r3, r0
 800034a:	220c      	movs	r2, #12
 800034c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295
 8000352:	e009      	b.n	8000368 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000354:	4b08      	ldr	r3, [pc, #32]	; (8000378 <_sbrk+0x64>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800035a:	4b07      	ldr	r3, [pc, #28]	; (8000378 <_sbrk+0x64>)
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4413      	add	r3, r2
 8000362:	4a05      	ldr	r2, [pc, #20]	; (8000378 <_sbrk+0x64>)
 8000364:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000366:	68fb      	ldr	r3, [r7, #12]
}
 8000368:	4618      	mov	r0, r3
 800036a:	3718      	adds	r7, #24
 800036c:	46bd      	mov	sp, r7
 800036e:	bd80      	pop	{r7, pc}
 8000370:	20020000 	.word	0x20020000
 8000374:	00000400 	.word	0x00000400
 8000378:	20000078 	.word	0x20000078
 800037c:	200001c8 	.word	0x200001c8

08000380 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000380:	480d      	ldr	r0, [pc, #52]	; (80003b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000382:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000384:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000388:	480c      	ldr	r0, [pc, #48]	; (80003bc <LoopForever+0x6>)
  ldr r1, =_edata
 800038a:	490d      	ldr	r1, [pc, #52]	; (80003c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800038c:	4a0d      	ldr	r2, [pc, #52]	; (80003c4 <LoopForever+0xe>)
  movs r3, #0
 800038e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000390:	e002      	b.n	8000398 <LoopCopyDataInit>

08000392 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000392:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000394:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000396:	3304      	adds	r3, #4

08000398 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000398:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800039a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800039c:	d3f9      	bcc.n	8000392 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800039e:	4a0a      	ldr	r2, [pc, #40]	; (80003c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a0:	4c0a      	ldr	r4, [pc, #40]	; (80003cc <LoopForever+0x16>)
  movs r3, #0
 80003a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a4:	e001      	b.n	80003aa <LoopFillZerobss>

080003a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a8:	3204      	adds	r2, #4

080003aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ac:	d3fb      	bcc.n	80003a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ae:	f000 fa5b 	bl	8000868 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003b2:	f7ff ff11 	bl	80001d8 <main>

080003b6 <LoopForever>:

LoopForever:
  b LoopForever
 80003b6:	e7fe      	b.n	80003b6 <LoopForever>
  ldr   r0, =_estack
 80003b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003c4:	08000d58 	.word	0x08000d58
  ldr r2, =_sbss
 80003c8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003cc:	200001c8 	.word	0x200001c8

080003d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d0:	e7fe      	b.n	80003d0 <ADC_IRQHandler>
	...

080003d4 <std>:
 80003d4:	2300      	movs	r3, #0
 80003d6:	b510      	push	{r4, lr}
 80003d8:	4604      	mov	r4, r0
 80003da:	e9c0 3300 	strd	r3, r3, [r0]
 80003de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003e2:	6083      	str	r3, [r0, #8]
 80003e4:	8181      	strh	r1, [r0, #12]
 80003e6:	6643      	str	r3, [r0, #100]	; 0x64
 80003e8:	81c2      	strh	r2, [r0, #14]
 80003ea:	6183      	str	r3, [r0, #24]
 80003ec:	4619      	mov	r1, r3
 80003ee:	2208      	movs	r2, #8
 80003f0:	305c      	adds	r0, #92	; 0x5c
 80003f2:	f000 f9e5 	bl	80007c0 <memset>
 80003f6:	4b0d      	ldr	r3, [pc, #52]	; (800042c <std+0x58>)
 80003f8:	6263      	str	r3, [r4, #36]	; 0x24
 80003fa:	4b0d      	ldr	r3, [pc, #52]	; (8000430 <std+0x5c>)
 80003fc:	62a3      	str	r3, [r4, #40]	; 0x28
 80003fe:	4b0d      	ldr	r3, [pc, #52]	; (8000434 <std+0x60>)
 8000400:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000402:	4b0d      	ldr	r3, [pc, #52]	; (8000438 <std+0x64>)
 8000404:	6323      	str	r3, [r4, #48]	; 0x30
 8000406:	4b0d      	ldr	r3, [pc, #52]	; (800043c <std+0x68>)
 8000408:	6224      	str	r4, [r4, #32]
 800040a:	429c      	cmp	r4, r3
 800040c:	d006      	beq.n	800041c <std+0x48>
 800040e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000412:	4294      	cmp	r4, r2
 8000414:	d002      	beq.n	800041c <std+0x48>
 8000416:	33d0      	adds	r3, #208	; 0xd0
 8000418:	429c      	cmp	r4, r3
 800041a:	d105      	bne.n	8000428 <std+0x54>
 800041c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000420:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000424:	f000 ba44 	b.w	80008b0 <__retarget_lock_init_recursive>
 8000428:	bd10      	pop	{r4, pc}
 800042a:	bf00      	nop
 800042c:	08000611 	.word	0x08000611
 8000430:	08000633 	.word	0x08000633
 8000434:	0800066b 	.word	0x0800066b
 8000438:	0800068f 	.word	0x0800068f
 800043c:	2000007c 	.word	0x2000007c

08000440 <stdio_exit_handler>:
 8000440:	4a02      	ldr	r2, [pc, #8]	; (800044c <stdio_exit_handler+0xc>)
 8000442:	4903      	ldr	r1, [pc, #12]	; (8000450 <stdio_exit_handler+0x10>)
 8000444:	4803      	ldr	r0, [pc, #12]	; (8000454 <stdio_exit_handler+0x14>)
 8000446:	f000 b869 	b.w	800051c <_fwalk_sglue>
 800044a:	bf00      	nop
 800044c:	20000000 	.word	0x20000000
 8000450:	08000bb5 	.word	0x08000bb5
 8000454:	2000000c 	.word	0x2000000c

08000458 <cleanup_stdio>:
 8000458:	6841      	ldr	r1, [r0, #4]
 800045a:	4b0c      	ldr	r3, [pc, #48]	; (800048c <cleanup_stdio+0x34>)
 800045c:	4299      	cmp	r1, r3
 800045e:	b510      	push	{r4, lr}
 8000460:	4604      	mov	r4, r0
 8000462:	d001      	beq.n	8000468 <cleanup_stdio+0x10>
 8000464:	f000 fba6 	bl	8000bb4 <_fflush_r>
 8000468:	68a1      	ldr	r1, [r4, #8]
 800046a:	4b09      	ldr	r3, [pc, #36]	; (8000490 <cleanup_stdio+0x38>)
 800046c:	4299      	cmp	r1, r3
 800046e:	d002      	beq.n	8000476 <cleanup_stdio+0x1e>
 8000470:	4620      	mov	r0, r4
 8000472:	f000 fb9f 	bl	8000bb4 <_fflush_r>
 8000476:	68e1      	ldr	r1, [r4, #12]
 8000478:	4b06      	ldr	r3, [pc, #24]	; (8000494 <cleanup_stdio+0x3c>)
 800047a:	4299      	cmp	r1, r3
 800047c:	d004      	beq.n	8000488 <cleanup_stdio+0x30>
 800047e:	4620      	mov	r0, r4
 8000480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000484:	f000 bb96 	b.w	8000bb4 <_fflush_r>
 8000488:	bd10      	pop	{r4, pc}
 800048a:	bf00      	nop
 800048c:	2000007c 	.word	0x2000007c
 8000490:	200000e4 	.word	0x200000e4
 8000494:	2000014c 	.word	0x2000014c

08000498 <global_stdio_init.part.0>:
 8000498:	b510      	push	{r4, lr}
 800049a:	4b0b      	ldr	r3, [pc, #44]	; (80004c8 <global_stdio_init.part.0+0x30>)
 800049c:	4c0b      	ldr	r4, [pc, #44]	; (80004cc <global_stdio_init.part.0+0x34>)
 800049e:	4a0c      	ldr	r2, [pc, #48]	; (80004d0 <global_stdio_init.part.0+0x38>)
 80004a0:	601a      	str	r2, [r3, #0]
 80004a2:	4620      	mov	r0, r4
 80004a4:	2200      	movs	r2, #0
 80004a6:	2104      	movs	r1, #4
 80004a8:	f7ff ff94 	bl	80003d4 <std>
 80004ac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80004b0:	2201      	movs	r2, #1
 80004b2:	2109      	movs	r1, #9
 80004b4:	f7ff ff8e 	bl	80003d4 <std>
 80004b8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80004bc:	2202      	movs	r2, #2
 80004be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004c2:	2112      	movs	r1, #18
 80004c4:	f7ff bf86 	b.w	80003d4 <std>
 80004c8:	200001b4 	.word	0x200001b4
 80004cc:	2000007c 	.word	0x2000007c
 80004d0:	08000441 	.word	0x08000441

080004d4 <__sfp_lock_acquire>:
 80004d4:	4801      	ldr	r0, [pc, #4]	; (80004dc <__sfp_lock_acquire+0x8>)
 80004d6:	f000 b9ec 	b.w	80008b2 <__retarget_lock_acquire_recursive>
 80004da:	bf00      	nop
 80004dc:	200001bd 	.word	0x200001bd

080004e0 <__sfp_lock_release>:
 80004e0:	4801      	ldr	r0, [pc, #4]	; (80004e8 <__sfp_lock_release+0x8>)
 80004e2:	f000 b9e7 	b.w	80008b4 <__retarget_lock_release_recursive>
 80004e6:	bf00      	nop
 80004e8:	200001bd 	.word	0x200001bd

080004ec <__sinit>:
 80004ec:	b510      	push	{r4, lr}
 80004ee:	4604      	mov	r4, r0
 80004f0:	f7ff fff0 	bl	80004d4 <__sfp_lock_acquire>
 80004f4:	6a23      	ldr	r3, [r4, #32]
 80004f6:	b11b      	cbz	r3, 8000500 <__sinit+0x14>
 80004f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004fc:	f7ff bff0 	b.w	80004e0 <__sfp_lock_release>
 8000500:	4b04      	ldr	r3, [pc, #16]	; (8000514 <__sinit+0x28>)
 8000502:	6223      	str	r3, [r4, #32]
 8000504:	4b04      	ldr	r3, [pc, #16]	; (8000518 <__sinit+0x2c>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	2b00      	cmp	r3, #0
 800050a:	d1f5      	bne.n	80004f8 <__sinit+0xc>
 800050c:	f7ff ffc4 	bl	8000498 <global_stdio_init.part.0>
 8000510:	e7f2      	b.n	80004f8 <__sinit+0xc>
 8000512:	bf00      	nop
 8000514:	08000459 	.word	0x08000459
 8000518:	200001b4 	.word	0x200001b4

0800051c <_fwalk_sglue>:
 800051c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000520:	4607      	mov	r7, r0
 8000522:	4688      	mov	r8, r1
 8000524:	4614      	mov	r4, r2
 8000526:	2600      	movs	r6, #0
 8000528:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800052c:	f1b9 0901 	subs.w	r9, r9, #1
 8000530:	d505      	bpl.n	800053e <_fwalk_sglue+0x22>
 8000532:	6824      	ldr	r4, [r4, #0]
 8000534:	2c00      	cmp	r4, #0
 8000536:	d1f7      	bne.n	8000528 <_fwalk_sglue+0xc>
 8000538:	4630      	mov	r0, r6
 800053a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800053e:	89ab      	ldrh	r3, [r5, #12]
 8000540:	2b01      	cmp	r3, #1
 8000542:	d907      	bls.n	8000554 <_fwalk_sglue+0x38>
 8000544:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000548:	3301      	adds	r3, #1
 800054a:	d003      	beq.n	8000554 <_fwalk_sglue+0x38>
 800054c:	4629      	mov	r1, r5
 800054e:	4638      	mov	r0, r7
 8000550:	47c0      	blx	r8
 8000552:	4306      	orrs	r6, r0
 8000554:	3568      	adds	r5, #104	; 0x68
 8000556:	e7e9      	b.n	800052c <_fwalk_sglue+0x10>

08000558 <_puts_r>:
 8000558:	6a03      	ldr	r3, [r0, #32]
 800055a:	b570      	push	{r4, r5, r6, lr}
 800055c:	6884      	ldr	r4, [r0, #8]
 800055e:	4605      	mov	r5, r0
 8000560:	460e      	mov	r6, r1
 8000562:	b90b      	cbnz	r3, 8000568 <_puts_r+0x10>
 8000564:	f7ff ffc2 	bl	80004ec <__sinit>
 8000568:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800056a:	07db      	lsls	r3, r3, #31
 800056c:	d405      	bmi.n	800057a <_puts_r+0x22>
 800056e:	89a3      	ldrh	r3, [r4, #12]
 8000570:	0598      	lsls	r0, r3, #22
 8000572:	d402      	bmi.n	800057a <_puts_r+0x22>
 8000574:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000576:	f000 f99c 	bl	80008b2 <__retarget_lock_acquire_recursive>
 800057a:	89a3      	ldrh	r3, [r4, #12]
 800057c:	0719      	lsls	r1, r3, #28
 800057e:	d513      	bpl.n	80005a8 <_puts_r+0x50>
 8000580:	6923      	ldr	r3, [r4, #16]
 8000582:	b18b      	cbz	r3, 80005a8 <_puts_r+0x50>
 8000584:	3e01      	subs	r6, #1
 8000586:	68a3      	ldr	r3, [r4, #8]
 8000588:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800058c:	3b01      	subs	r3, #1
 800058e:	60a3      	str	r3, [r4, #8]
 8000590:	b9e9      	cbnz	r1, 80005ce <_puts_r+0x76>
 8000592:	2b00      	cmp	r3, #0
 8000594:	da2e      	bge.n	80005f4 <_puts_r+0x9c>
 8000596:	4622      	mov	r2, r4
 8000598:	210a      	movs	r1, #10
 800059a:	4628      	mov	r0, r5
 800059c:	f000 f87b 	bl	8000696 <__swbuf_r>
 80005a0:	3001      	adds	r0, #1
 80005a2:	d007      	beq.n	80005b4 <_puts_r+0x5c>
 80005a4:	250a      	movs	r5, #10
 80005a6:	e007      	b.n	80005b8 <_puts_r+0x60>
 80005a8:	4621      	mov	r1, r4
 80005aa:	4628      	mov	r0, r5
 80005ac:	f000 f8b0 	bl	8000710 <__swsetup_r>
 80005b0:	2800      	cmp	r0, #0
 80005b2:	d0e7      	beq.n	8000584 <_puts_r+0x2c>
 80005b4:	f04f 35ff 	mov.w	r5, #4294967295
 80005b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005ba:	07da      	lsls	r2, r3, #31
 80005bc:	d405      	bmi.n	80005ca <_puts_r+0x72>
 80005be:	89a3      	ldrh	r3, [r4, #12]
 80005c0:	059b      	lsls	r3, r3, #22
 80005c2:	d402      	bmi.n	80005ca <_puts_r+0x72>
 80005c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005c6:	f000 f975 	bl	80008b4 <__retarget_lock_release_recursive>
 80005ca:	4628      	mov	r0, r5
 80005cc:	bd70      	pop	{r4, r5, r6, pc}
 80005ce:	2b00      	cmp	r3, #0
 80005d0:	da04      	bge.n	80005dc <_puts_r+0x84>
 80005d2:	69a2      	ldr	r2, [r4, #24]
 80005d4:	429a      	cmp	r2, r3
 80005d6:	dc06      	bgt.n	80005e6 <_puts_r+0x8e>
 80005d8:	290a      	cmp	r1, #10
 80005da:	d004      	beq.n	80005e6 <_puts_r+0x8e>
 80005dc:	6823      	ldr	r3, [r4, #0]
 80005de:	1c5a      	adds	r2, r3, #1
 80005e0:	6022      	str	r2, [r4, #0]
 80005e2:	7019      	strb	r1, [r3, #0]
 80005e4:	e7cf      	b.n	8000586 <_puts_r+0x2e>
 80005e6:	4622      	mov	r2, r4
 80005e8:	4628      	mov	r0, r5
 80005ea:	f000 f854 	bl	8000696 <__swbuf_r>
 80005ee:	3001      	adds	r0, #1
 80005f0:	d1c9      	bne.n	8000586 <_puts_r+0x2e>
 80005f2:	e7df      	b.n	80005b4 <_puts_r+0x5c>
 80005f4:	6823      	ldr	r3, [r4, #0]
 80005f6:	250a      	movs	r5, #10
 80005f8:	1c5a      	adds	r2, r3, #1
 80005fa:	6022      	str	r2, [r4, #0]
 80005fc:	701d      	strb	r5, [r3, #0]
 80005fe:	e7db      	b.n	80005b8 <_puts_r+0x60>

08000600 <puts>:
 8000600:	4b02      	ldr	r3, [pc, #8]	; (800060c <puts+0xc>)
 8000602:	4601      	mov	r1, r0
 8000604:	6818      	ldr	r0, [r3, #0]
 8000606:	f7ff bfa7 	b.w	8000558 <_puts_r>
 800060a:	bf00      	nop
 800060c:	20000058 	.word	0x20000058

08000610 <__sread>:
 8000610:	b510      	push	{r4, lr}
 8000612:	460c      	mov	r4, r1
 8000614:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000618:	f000 f8fc 	bl	8000814 <_read_r>
 800061c:	2800      	cmp	r0, #0
 800061e:	bfab      	itete	ge
 8000620:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000622:	89a3      	ldrhlt	r3, [r4, #12]
 8000624:	181b      	addge	r3, r3, r0
 8000626:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800062a:	bfac      	ite	ge
 800062c:	6563      	strge	r3, [r4, #84]	; 0x54
 800062e:	81a3      	strhlt	r3, [r4, #12]
 8000630:	bd10      	pop	{r4, pc}

08000632 <__swrite>:
 8000632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000636:	461f      	mov	r7, r3
 8000638:	898b      	ldrh	r3, [r1, #12]
 800063a:	05db      	lsls	r3, r3, #23
 800063c:	4605      	mov	r5, r0
 800063e:	460c      	mov	r4, r1
 8000640:	4616      	mov	r6, r2
 8000642:	d505      	bpl.n	8000650 <__swrite+0x1e>
 8000644:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000648:	2302      	movs	r3, #2
 800064a:	2200      	movs	r2, #0
 800064c:	f000 f8d0 	bl	80007f0 <_lseek_r>
 8000650:	89a3      	ldrh	r3, [r4, #12]
 8000652:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000656:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800065a:	81a3      	strh	r3, [r4, #12]
 800065c:	4632      	mov	r2, r6
 800065e:	463b      	mov	r3, r7
 8000660:	4628      	mov	r0, r5
 8000662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000666:	f000 b8e7 	b.w	8000838 <_write_r>

0800066a <__sseek>:
 800066a:	b510      	push	{r4, lr}
 800066c:	460c      	mov	r4, r1
 800066e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000672:	f000 f8bd 	bl	80007f0 <_lseek_r>
 8000676:	1c43      	adds	r3, r0, #1
 8000678:	89a3      	ldrh	r3, [r4, #12]
 800067a:	bf15      	itete	ne
 800067c:	6560      	strne	r0, [r4, #84]	; 0x54
 800067e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000682:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000686:	81a3      	strheq	r3, [r4, #12]
 8000688:	bf18      	it	ne
 800068a:	81a3      	strhne	r3, [r4, #12]
 800068c:	bd10      	pop	{r4, pc}

0800068e <__sclose>:
 800068e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000692:	f000 b89d 	b.w	80007d0 <_close_r>

08000696 <__swbuf_r>:
 8000696:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000698:	460e      	mov	r6, r1
 800069a:	4614      	mov	r4, r2
 800069c:	4605      	mov	r5, r0
 800069e:	b118      	cbz	r0, 80006a8 <__swbuf_r+0x12>
 80006a0:	6a03      	ldr	r3, [r0, #32]
 80006a2:	b90b      	cbnz	r3, 80006a8 <__swbuf_r+0x12>
 80006a4:	f7ff ff22 	bl	80004ec <__sinit>
 80006a8:	69a3      	ldr	r3, [r4, #24]
 80006aa:	60a3      	str	r3, [r4, #8]
 80006ac:	89a3      	ldrh	r3, [r4, #12]
 80006ae:	071a      	lsls	r2, r3, #28
 80006b0:	d525      	bpl.n	80006fe <__swbuf_r+0x68>
 80006b2:	6923      	ldr	r3, [r4, #16]
 80006b4:	b31b      	cbz	r3, 80006fe <__swbuf_r+0x68>
 80006b6:	6823      	ldr	r3, [r4, #0]
 80006b8:	6922      	ldr	r2, [r4, #16]
 80006ba:	1a98      	subs	r0, r3, r2
 80006bc:	6963      	ldr	r3, [r4, #20]
 80006be:	b2f6      	uxtb	r6, r6
 80006c0:	4283      	cmp	r3, r0
 80006c2:	4637      	mov	r7, r6
 80006c4:	dc04      	bgt.n	80006d0 <__swbuf_r+0x3a>
 80006c6:	4621      	mov	r1, r4
 80006c8:	4628      	mov	r0, r5
 80006ca:	f000 fa73 	bl	8000bb4 <_fflush_r>
 80006ce:	b9e0      	cbnz	r0, 800070a <__swbuf_r+0x74>
 80006d0:	68a3      	ldr	r3, [r4, #8]
 80006d2:	3b01      	subs	r3, #1
 80006d4:	60a3      	str	r3, [r4, #8]
 80006d6:	6823      	ldr	r3, [r4, #0]
 80006d8:	1c5a      	adds	r2, r3, #1
 80006da:	6022      	str	r2, [r4, #0]
 80006dc:	701e      	strb	r6, [r3, #0]
 80006de:	6962      	ldr	r2, [r4, #20]
 80006e0:	1c43      	adds	r3, r0, #1
 80006e2:	429a      	cmp	r2, r3
 80006e4:	d004      	beq.n	80006f0 <__swbuf_r+0x5a>
 80006e6:	89a3      	ldrh	r3, [r4, #12]
 80006e8:	07db      	lsls	r3, r3, #31
 80006ea:	d506      	bpl.n	80006fa <__swbuf_r+0x64>
 80006ec:	2e0a      	cmp	r6, #10
 80006ee:	d104      	bne.n	80006fa <__swbuf_r+0x64>
 80006f0:	4621      	mov	r1, r4
 80006f2:	4628      	mov	r0, r5
 80006f4:	f000 fa5e 	bl	8000bb4 <_fflush_r>
 80006f8:	b938      	cbnz	r0, 800070a <__swbuf_r+0x74>
 80006fa:	4638      	mov	r0, r7
 80006fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006fe:	4621      	mov	r1, r4
 8000700:	4628      	mov	r0, r5
 8000702:	f000 f805 	bl	8000710 <__swsetup_r>
 8000706:	2800      	cmp	r0, #0
 8000708:	d0d5      	beq.n	80006b6 <__swbuf_r+0x20>
 800070a:	f04f 37ff 	mov.w	r7, #4294967295
 800070e:	e7f4      	b.n	80006fa <__swbuf_r+0x64>

08000710 <__swsetup_r>:
 8000710:	b538      	push	{r3, r4, r5, lr}
 8000712:	4b2a      	ldr	r3, [pc, #168]	; (80007bc <__swsetup_r+0xac>)
 8000714:	4605      	mov	r5, r0
 8000716:	6818      	ldr	r0, [r3, #0]
 8000718:	460c      	mov	r4, r1
 800071a:	b118      	cbz	r0, 8000724 <__swsetup_r+0x14>
 800071c:	6a03      	ldr	r3, [r0, #32]
 800071e:	b90b      	cbnz	r3, 8000724 <__swsetup_r+0x14>
 8000720:	f7ff fee4 	bl	80004ec <__sinit>
 8000724:	89a3      	ldrh	r3, [r4, #12]
 8000726:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800072a:	0718      	lsls	r0, r3, #28
 800072c:	d422      	bmi.n	8000774 <__swsetup_r+0x64>
 800072e:	06d9      	lsls	r1, r3, #27
 8000730:	d407      	bmi.n	8000742 <__swsetup_r+0x32>
 8000732:	2309      	movs	r3, #9
 8000734:	602b      	str	r3, [r5, #0]
 8000736:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800073a:	81a3      	strh	r3, [r4, #12]
 800073c:	f04f 30ff 	mov.w	r0, #4294967295
 8000740:	e034      	b.n	80007ac <__swsetup_r+0x9c>
 8000742:	0758      	lsls	r0, r3, #29
 8000744:	d512      	bpl.n	800076c <__swsetup_r+0x5c>
 8000746:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000748:	b141      	cbz	r1, 800075c <__swsetup_r+0x4c>
 800074a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800074e:	4299      	cmp	r1, r3
 8000750:	d002      	beq.n	8000758 <__swsetup_r+0x48>
 8000752:	4628      	mov	r0, r5
 8000754:	f000 f8b0 	bl	80008b8 <_free_r>
 8000758:	2300      	movs	r3, #0
 800075a:	6363      	str	r3, [r4, #52]	; 0x34
 800075c:	89a3      	ldrh	r3, [r4, #12]
 800075e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000762:	81a3      	strh	r3, [r4, #12]
 8000764:	2300      	movs	r3, #0
 8000766:	6063      	str	r3, [r4, #4]
 8000768:	6923      	ldr	r3, [r4, #16]
 800076a:	6023      	str	r3, [r4, #0]
 800076c:	89a3      	ldrh	r3, [r4, #12]
 800076e:	f043 0308 	orr.w	r3, r3, #8
 8000772:	81a3      	strh	r3, [r4, #12]
 8000774:	6923      	ldr	r3, [r4, #16]
 8000776:	b94b      	cbnz	r3, 800078c <__swsetup_r+0x7c>
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800077e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000782:	d003      	beq.n	800078c <__swsetup_r+0x7c>
 8000784:	4621      	mov	r1, r4
 8000786:	4628      	mov	r0, r5
 8000788:	f000 fa62 	bl	8000c50 <__smakebuf_r>
 800078c:	89a0      	ldrh	r0, [r4, #12]
 800078e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000792:	f010 0301 	ands.w	r3, r0, #1
 8000796:	d00a      	beq.n	80007ae <__swsetup_r+0x9e>
 8000798:	2300      	movs	r3, #0
 800079a:	60a3      	str	r3, [r4, #8]
 800079c:	6963      	ldr	r3, [r4, #20]
 800079e:	425b      	negs	r3, r3
 80007a0:	61a3      	str	r3, [r4, #24]
 80007a2:	6923      	ldr	r3, [r4, #16]
 80007a4:	b943      	cbnz	r3, 80007b8 <__swsetup_r+0xa8>
 80007a6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80007aa:	d1c4      	bne.n	8000736 <__swsetup_r+0x26>
 80007ac:	bd38      	pop	{r3, r4, r5, pc}
 80007ae:	0781      	lsls	r1, r0, #30
 80007b0:	bf58      	it	pl
 80007b2:	6963      	ldrpl	r3, [r4, #20]
 80007b4:	60a3      	str	r3, [r4, #8]
 80007b6:	e7f4      	b.n	80007a2 <__swsetup_r+0x92>
 80007b8:	2000      	movs	r0, #0
 80007ba:	e7f7      	b.n	80007ac <__swsetup_r+0x9c>
 80007bc:	20000058 	.word	0x20000058

080007c0 <memset>:
 80007c0:	4402      	add	r2, r0
 80007c2:	4603      	mov	r3, r0
 80007c4:	4293      	cmp	r3, r2
 80007c6:	d100      	bne.n	80007ca <memset+0xa>
 80007c8:	4770      	bx	lr
 80007ca:	f803 1b01 	strb.w	r1, [r3], #1
 80007ce:	e7f9      	b.n	80007c4 <memset+0x4>

080007d0 <_close_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4d06      	ldr	r5, [pc, #24]	; (80007ec <_close_r+0x1c>)
 80007d4:	2300      	movs	r3, #0
 80007d6:	4604      	mov	r4, r0
 80007d8:	4608      	mov	r0, r1
 80007da:	602b      	str	r3, [r5, #0]
 80007dc:	f7ff fd65 	bl	80002aa <_close>
 80007e0:	1c43      	adds	r3, r0, #1
 80007e2:	d102      	bne.n	80007ea <_close_r+0x1a>
 80007e4:	682b      	ldr	r3, [r5, #0]
 80007e6:	b103      	cbz	r3, 80007ea <_close_r+0x1a>
 80007e8:	6023      	str	r3, [r4, #0]
 80007ea:	bd38      	pop	{r3, r4, r5, pc}
 80007ec:	200001b8 	.word	0x200001b8

080007f0 <_lseek_r>:
 80007f0:	b538      	push	{r3, r4, r5, lr}
 80007f2:	4d07      	ldr	r5, [pc, #28]	; (8000810 <_lseek_r+0x20>)
 80007f4:	4604      	mov	r4, r0
 80007f6:	4608      	mov	r0, r1
 80007f8:	4611      	mov	r1, r2
 80007fa:	2200      	movs	r2, #0
 80007fc:	602a      	str	r2, [r5, #0]
 80007fe:	461a      	mov	r2, r3
 8000800:	f7ff fd7a 	bl	80002f8 <_lseek>
 8000804:	1c43      	adds	r3, r0, #1
 8000806:	d102      	bne.n	800080e <_lseek_r+0x1e>
 8000808:	682b      	ldr	r3, [r5, #0]
 800080a:	b103      	cbz	r3, 800080e <_lseek_r+0x1e>
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	bd38      	pop	{r3, r4, r5, pc}
 8000810:	200001b8 	.word	0x200001b8

08000814 <_read_r>:
 8000814:	b538      	push	{r3, r4, r5, lr}
 8000816:	4d07      	ldr	r5, [pc, #28]	; (8000834 <_read_r+0x20>)
 8000818:	4604      	mov	r4, r0
 800081a:	4608      	mov	r0, r1
 800081c:	4611      	mov	r1, r2
 800081e:	2200      	movs	r2, #0
 8000820:	602a      	str	r2, [r5, #0]
 8000822:	461a      	mov	r2, r3
 8000824:	f7ff fd08 	bl	8000238 <_read>
 8000828:	1c43      	adds	r3, r0, #1
 800082a:	d102      	bne.n	8000832 <_read_r+0x1e>
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	b103      	cbz	r3, 8000832 <_read_r+0x1e>
 8000830:	6023      	str	r3, [r4, #0]
 8000832:	bd38      	pop	{r3, r4, r5, pc}
 8000834:	200001b8 	.word	0x200001b8

08000838 <_write_r>:
 8000838:	b538      	push	{r3, r4, r5, lr}
 800083a:	4d07      	ldr	r5, [pc, #28]	; (8000858 <_write_r+0x20>)
 800083c:	4604      	mov	r4, r0
 800083e:	4608      	mov	r0, r1
 8000840:	4611      	mov	r1, r2
 8000842:	2200      	movs	r2, #0
 8000844:	602a      	str	r2, [r5, #0]
 8000846:	461a      	mov	r2, r3
 8000848:	f7ff fd13 	bl	8000272 <_write>
 800084c:	1c43      	adds	r3, r0, #1
 800084e:	d102      	bne.n	8000856 <_write_r+0x1e>
 8000850:	682b      	ldr	r3, [r5, #0]
 8000852:	b103      	cbz	r3, 8000856 <_write_r+0x1e>
 8000854:	6023      	str	r3, [r4, #0]
 8000856:	bd38      	pop	{r3, r4, r5, pc}
 8000858:	200001b8 	.word	0x200001b8

0800085c <__errno>:
 800085c:	4b01      	ldr	r3, [pc, #4]	; (8000864 <__errno+0x8>)
 800085e:	6818      	ldr	r0, [r3, #0]
 8000860:	4770      	bx	lr
 8000862:	bf00      	nop
 8000864:	20000058 	.word	0x20000058

08000868 <__libc_init_array>:
 8000868:	b570      	push	{r4, r5, r6, lr}
 800086a:	4d0d      	ldr	r5, [pc, #52]	; (80008a0 <__libc_init_array+0x38>)
 800086c:	4c0d      	ldr	r4, [pc, #52]	; (80008a4 <__libc_init_array+0x3c>)
 800086e:	1b64      	subs	r4, r4, r5
 8000870:	10a4      	asrs	r4, r4, #2
 8000872:	2600      	movs	r6, #0
 8000874:	42a6      	cmp	r6, r4
 8000876:	d109      	bne.n	800088c <__libc_init_array+0x24>
 8000878:	4d0b      	ldr	r5, [pc, #44]	; (80008a8 <__libc_init_array+0x40>)
 800087a:	4c0c      	ldr	r4, [pc, #48]	; (80008ac <__libc_init_array+0x44>)
 800087c:	f000 fa56 	bl	8000d2c <_init>
 8000880:	1b64      	subs	r4, r4, r5
 8000882:	10a4      	asrs	r4, r4, #2
 8000884:	2600      	movs	r6, #0
 8000886:	42a6      	cmp	r6, r4
 8000888:	d105      	bne.n	8000896 <__libc_init_array+0x2e>
 800088a:	bd70      	pop	{r4, r5, r6, pc}
 800088c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000890:	4798      	blx	r3
 8000892:	3601      	adds	r6, #1
 8000894:	e7ee      	b.n	8000874 <__libc_init_array+0xc>
 8000896:	f855 3b04 	ldr.w	r3, [r5], #4
 800089a:	4798      	blx	r3
 800089c:	3601      	adds	r6, #1
 800089e:	e7f2      	b.n	8000886 <__libc_init_array+0x1e>
 80008a0:	08000d50 	.word	0x08000d50
 80008a4:	08000d50 	.word	0x08000d50
 80008a8:	08000d50 	.word	0x08000d50
 80008ac:	08000d54 	.word	0x08000d54

080008b0 <__retarget_lock_init_recursive>:
 80008b0:	4770      	bx	lr

080008b2 <__retarget_lock_acquire_recursive>:
 80008b2:	4770      	bx	lr

080008b4 <__retarget_lock_release_recursive>:
 80008b4:	4770      	bx	lr
	...

080008b8 <_free_r>:
 80008b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008ba:	2900      	cmp	r1, #0
 80008bc:	d044      	beq.n	8000948 <_free_r+0x90>
 80008be:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008c2:	9001      	str	r0, [sp, #4]
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	f1a1 0404 	sub.w	r4, r1, #4
 80008ca:	bfb8      	it	lt
 80008cc:	18e4      	addlt	r4, r4, r3
 80008ce:	f000 f8df 	bl	8000a90 <__malloc_lock>
 80008d2:	4a1e      	ldr	r2, [pc, #120]	; (800094c <_free_r+0x94>)
 80008d4:	9801      	ldr	r0, [sp, #4]
 80008d6:	6813      	ldr	r3, [r2, #0]
 80008d8:	b933      	cbnz	r3, 80008e8 <_free_r+0x30>
 80008da:	6063      	str	r3, [r4, #4]
 80008dc:	6014      	str	r4, [r2, #0]
 80008de:	b003      	add	sp, #12
 80008e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008e4:	f000 b8da 	b.w	8000a9c <__malloc_unlock>
 80008e8:	42a3      	cmp	r3, r4
 80008ea:	d908      	bls.n	80008fe <_free_r+0x46>
 80008ec:	6825      	ldr	r5, [r4, #0]
 80008ee:	1961      	adds	r1, r4, r5
 80008f0:	428b      	cmp	r3, r1
 80008f2:	bf01      	itttt	eq
 80008f4:	6819      	ldreq	r1, [r3, #0]
 80008f6:	685b      	ldreq	r3, [r3, #4]
 80008f8:	1949      	addeq	r1, r1, r5
 80008fa:	6021      	streq	r1, [r4, #0]
 80008fc:	e7ed      	b.n	80008da <_free_r+0x22>
 80008fe:	461a      	mov	r2, r3
 8000900:	685b      	ldr	r3, [r3, #4]
 8000902:	b10b      	cbz	r3, 8000908 <_free_r+0x50>
 8000904:	42a3      	cmp	r3, r4
 8000906:	d9fa      	bls.n	80008fe <_free_r+0x46>
 8000908:	6811      	ldr	r1, [r2, #0]
 800090a:	1855      	adds	r5, r2, r1
 800090c:	42a5      	cmp	r5, r4
 800090e:	d10b      	bne.n	8000928 <_free_r+0x70>
 8000910:	6824      	ldr	r4, [r4, #0]
 8000912:	4421      	add	r1, r4
 8000914:	1854      	adds	r4, r2, r1
 8000916:	42a3      	cmp	r3, r4
 8000918:	6011      	str	r1, [r2, #0]
 800091a:	d1e0      	bne.n	80008de <_free_r+0x26>
 800091c:	681c      	ldr	r4, [r3, #0]
 800091e:	685b      	ldr	r3, [r3, #4]
 8000920:	6053      	str	r3, [r2, #4]
 8000922:	440c      	add	r4, r1
 8000924:	6014      	str	r4, [r2, #0]
 8000926:	e7da      	b.n	80008de <_free_r+0x26>
 8000928:	d902      	bls.n	8000930 <_free_r+0x78>
 800092a:	230c      	movs	r3, #12
 800092c:	6003      	str	r3, [r0, #0]
 800092e:	e7d6      	b.n	80008de <_free_r+0x26>
 8000930:	6825      	ldr	r5, [r4, #0]
 8000932:	1961      	adds	r1, r4, r5
 8000934:	428b      	cmp	r3, r1
 8000936:	bf04      	itt	eq
 8000938:	6819      	ldreq	r1, [r3, #0]
 800093a:	685b      	ldreq	r3, [r3, #4]
 800093c:	6063      	str	r3, [r4, #4]
 800093e:	bf04      	itt	eq
 8000940:	1949      	addeq	r1, r1, r5
 8000942:	6021      	streq	r1, [r4, #0]
 8000944:	6054      	str	r4, [r2, #4]
 8000946:	e7ca      	b.n	80008de <_free_r+0x26>
 8000948:	b003      	add	sp, #12
 800094a:	bd30      	pop	{r4, r5, pc}
 800094c:	200001c0 	.word	0x200001c0

08000950 <sbrk_aligned>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	4e0e      	ldr	r6, [pc, #56]	; (800098c <sbrk_aligned+0x3c>)
 8000954:	460c      	mov	r4, r1
 8000956:	6831      	ldr	r1, [r6, #0]
 8000958:	4605      	mov	r5, r0
 800095a:	b911      	cbnz	r1, 8000962 <sbrk_aligned+0x12>
 800095c:	f000 f9d6 	bl	8000d0c <_sbrk_r>
 8000960:	6030      	str	r0, [r6, #0]
 8000962:	4621      	mov	r1, r4
 8000964:	4628      	mov	r0, r5
 8000966:	f000 f9d1 	bl	8000d0c <_sbrk_r>
 800096a:	1c43      	adds	r3, r0, #1
 800096c:	d00a      	beq.n	8000984 <sbrk_aligned+0x34>
 800096e:	1cc4      	adds	r4, r0, #3
 8000970:	f024 0403 	bic.w	r4, r4, #3
 8000974:	42a0      	cmp	r0, r4
 8000976:	d007      	beq.n	8000988 <sbrk_aligned+0x38>
 8000978:	1a21      	subs	r1, r4, r0
 800097a:	4628      	mov	r0, r5
 800097c:	f000 f9c6 	bl	8000d0c <_sbrk_r>
 8000980:	3001      	adds	r0, #1
 8000982:	d101      	bne.n	8000988 <sbrk_aligned+0x38>
 8000984:	f04f 34ff 	mov.w	r4, #4294967295
 8000988:	4620      	mov	r0, r4
 800098a:	bd70      	pop	{r4, r5, r6, pc}
 800098c:	200001c4 	.word	0x200001c4

08000990 <_malloc_r>:
 8000990:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000994:	1ccd      	adds	r5, r1, #3
 8000996:	f025 0503 	bic.w	r5, r5, #3
 800099a:	3508      	adds	r5, #8
 800099c:	2d0c      	cmp	r5, #12
 800099e:	bf38      	it	cc
 80009a0:	250c      	movcc	r5, #12
 80009a2:	2d00      	cmp	r5, #0
 80009a4:	4607      	mov	r7, r0
 80009a6:	db01      	blt.n	80009ac <_malloc_r+0x1c>
 80009a8:	42a9      	cmp	r1, r5
 80009aa:	d905      	bls.n	80009b8 <_malloc_r+0x28>
 80009ac:	230c      	movs	r3, #12
 80009ae:	603b      	str	r3, [r7, #0]
 80009b0:	2600      	movs	r6, #0
 80009b2:	4630      	mov	r0, r6
 80009b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009b8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a8c <_malloc_r+0xfc>
 80009bc:	f000 f868 	bl	8000a90 <__malloc_lock>
 80009c0:	f8d8 3000 	ldr.w	r3, [r8]
 80009c4:	461c      	mov	r4, r3
 80009c6:	bb5c      	cbnz	r4, 8000a20 <_malloc_r+0x90>
 80009c8:	4629      	mov	r1, r5
 80009ca:	4638      	mov	r0, r7
 80009cc:	f7ff ffc0 	bl	8000950 <sbrk_aligned>
 80009d0:	1c43      	adds	r3, r0, #1
 80009d2:	4604      	mov	r4, r0
 80009d4:	d155      	bne.n	8000a82 <_malloc_r+0xf2>
 80009d6:	f8d8 4000 	ldr.w	r4, [r8]
 80009da:	4626      	mov	r6, r4
 80009dc:	2e00      	cmp	r6, #0
 80009de:	d145      	bne.n	8000a6c <_malloc_r+0xdc>
 80009e0:	2c00      	cmp	r4, #0
 80009e2:	d048      	beq.n	8000a76 <_malloc_r+0xe6>
 80009e4:	6823      	ldr	r3, [r4, #0]
 80009e6:	4631      	mov	r1, r6
 80009e8:	4638      	mov	r0, r7
 80009ea:	eb04 0903 	add.w	r9, r4, r3
 80009ee:	f000 f98d 	bl	8000d0c <_sbrk_r>
 80009f2:	4581      	cmp	r9, r0
 80009f4:	d13f      	bne.n	8000a76 <_malloc_r+0xe6>
 80009f6:	6821      	ldr	r1, [r4, #0]
 80009f8:	1a6d      	subs	r5, r5, r1
 80009fa:	4629      	mov	r1, r5
 80009fc:	4638      	mov	r0, r7
 80009fe:	f7ff ffa7 	bl	8000950 <sbrk_aligned>
 8000a02:	3001      	adds	r0, #1
 8000a04:	d037      	beq.n	8000a76 <_malloc_r+0xe6>
 8000a06:	6823      	ldr	r3, [r4, #0]
 8000a08:	442b      	add	r3, r5
 8000a0a:	6023      	str	r3, [r4, #0]
 8000a0c:	f8d8 3000 	ldr.w	r3, [r8]
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d038      	beq.n	8000a86 <_malloc_r+0xf6>
 8000a14:	685a      	ldr	r2, [r3, #4]
 8000a16:	42a2      	cmp	r2, r4
 8000a18:	d12b      	bne.n	8000a72 <_malloc_r+0xe2>
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	605a      	str	r2, [r3, #4]
 8000a1e:	e00f      	b.n	8000a40 <_malloc_r+0xb0>
 8000a20:	6822      	ldr	r2, [r4, #0]
 8000a22:	1b52      	subs	r2, r2, r5
 8000a24:	d41f      	bmi.n	8000a66 <_malloc_r+0xd6>
 8000a26:	2a0b      	cmp	r2, #11
 8000a28:	d917      	bls.n	8000a5a <_malloc_r+0xca>
 8000a2a:	1961      	adds	r1, r4, r5
 8000a2c:	42a3      	cmp	r3, r4
 8000a2e:	6025      	str	r5, [r4, #0]
 8000a30:	bf18      	it	ne
 8000a32:	6059      	strne	r1, [r3, #4]
 8000a34:	6863      	ldr	r3, [r4, #4]
 8000a36:	bf08      	it	eq
 8000a38:	f8c8 1000 	streq.w	r1, [r8]
 8000a3c:	5162      	str	r2, [r4, r5]
 8000a3e:	604b      	str	r3, [r1, #4]
 8000a40:	4638      	mov	r0, r7
 8000a42:	f104 060b 	add.w	r6, r4, #11
 8000a46:	f000 f829 	bl	8000a9c <__malloc_unlock>
 8000a4a:	f026 0607 	bic.w	r6, r6, #7
 8000a4e:	1d23      	adds	r3, r4, #4
 8000a50:	1af2      	subs	r2, r6, r3
 8000a52:	d0ae      	beq.n	80009b2 <_malloc_r+0x22>
 8000a54:	1b9b      	subs	r3, r3, r6
 8000a56:	50a3      	str	r3, [r4, r2]
 8000a58:	e7ab      	b.n	80009b2 <_malloc_r+0x22>
 8000a5a:	42a3      	cmp	r3, r4
 8000a5c:	6862      	ldr	r2, [r4, #4]
 8000a5e:	d1dd      	bne.n	8000a1c <_malloc_r+0x8c>
 8000a60:	f8c8 2000 	str.w	r2, [r8]
 8000a64:	e7ec      	b.n	8000a40 <_malloc_r+0xb0>
 8000a66:	4623      	mov	r3, r4
 8000a68:	6864      	ldr	r4, [r4, #4]
 8000a6a:	e7ac      	b.n	80009c6 <_malloc_r+0x36>
 8000a6c:	4634      	mov	r4, r6
 8000a6e:	6876      	ldr	r6, [r6, #4]
 8000a70:	e7b4      	b.n	80009dc <_malloc_r+0x4c>
 8000a72:	4613      	mov	r3, r2
 8000a74:	e7cc      	b.n	8000a10 <_malloc_r+0x80>
 8000a76:	230c      	movs	r3, #12
 8000a78:	603b      	str	r3, [r7, #0]
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f000 f80e 	bl	8000a9c <__malloc_unlock>
 8000a80:	e797      	b.n	80009b2 <_malloc_r+0x22>
 8000a82:	6025      	str	r5, [r4, #0]
 8000a84:	e7dc      	b.n	8000a40 <_malloc_r+0xb0>
 8000a86:	605b      	str	r3, [r3, #4]
 8000a88:	deff      	udf	#255	; 0xff
 8000a8a:	bf00      	nop
 8000a8c:	200001c0 	.word	0x200001c0

08000a90 <__malloc_lock>:
 8000a90:	4801      	ldr	r0, [pc, #4]	; (8000a98 <__malloc_lock+0x8>)
 8000a92:	f7ff bf0e 	b.w	80008b2 <__retarget_lock_acquire_recursive>
 8000a96:	bf00      	nop
 8000a98:	200001bc 	.word	0x200001bc

08000a9c <__malloc_unlock>:
 8000a9c:	4801      	ldr	r0, [pc, #4]	; (8000aa4 <__malloc_unlock+0x8>)
 8000a9e:	f7ff bf09 	b.w	80008b4 <__retarget_lock_release_recursive>
 8000aa2:	bf00      	nop
 8000aa4:	200001bc 	.word	0x200001bc

08000aa8 <__sflush_r>:
 8000aa8:	898a      	ldrh	r2, [r1, #12]
 8000aaa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000aae:	4605      	mov	r5, r0
 8000ab0:	0710      	lsls	r0, r2, #28
 8000ab2:	460c      	mov	r4, r1
 8000ab4:	d458      	bmi.n	8000b68 <__sflush_r+0xc0>
 8000ab6:	684b      	ldr	r3, [r1, #4]
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	dc05      	bgt.n	8000ac8 <__sflush_r+0x20>
 8000abc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	dc02      	bgt.n	8000ac8 <__sflush_r+0x20>
 8000ac2:	2000      	movs	r0, #0
 8000ac4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ac8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000aca:	2e00      	cmp	r6, #0
 8000acc:	d0f9      	beq.n	8000ac2 <__sflush_r+0x1a>
 8000ace:	2300      	movs	r3, #0
 8000ad0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000ad4:	682f      	ldr	r7, [r5, #0]
 8000ad6:	6a21      	ldr	r1, [r4, #32]
 8000ad8:	602b      	str	r3, [r5, #0]
 8000ada:	d032      	beq.n	8000b42 <__sflush_r+0x9a>
 8000adc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ade:	89a3      	ldrh	r3, [r4, #12]
 8000ae0:	075a      	lsls	r2, r3, #29
 8000ae2:	d505      	bpl.n	8000af0 <__sflush_r+0x48>
 8000ae4:	6863      	ldr	r3, [r4, #4]
 8000ae6:	1ac0      	subs	r0, r0, r3
 8000ae8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000aea:	b10b      	cbz	r3, 8000af0 <__sflush_r+0x48>
 8000aec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000aee:	1ac0      	subs	r0, r0, r3
 8000af0:	2300      	movs	r3, #0
 8000af2:	4602      	mov	r2, r0
 8000af4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000af6:	6a21      	ldr	r1, [r4, #32]
 8000af8:	4628      	mov	r0, r5
 8000afa:	47b0      	blx	r6
 8000afc:	1c43      	adds	r3, r0, #1
 8000afe:	89a3      	ldrh	r3, [r4, #12]
 8000b00:	d106      	bne.n	8000b10 <__sflush_r+0x68>
 8000b02:	6829      	ldr	r1, [r5, #0]
 8000b04:	291d      	cmp	r1, #29
 8000b06:	d82b      	bhi.n	8000b60 <__sflush_r+0xb8>
 8000b08:	4a29      	ldr	r2, [pc, #164]	; (8000bb0 <__sflush_r+0x108>)
 8000b0a:	410a      	asrs	r2, r1
 8000b0c:	07d6      	lsls	r6, r2, #31
 8000b0e:	d427      	bmi.n	8000b60 <__sflush_r+0xb8>
 8000b10:	2200      	movs	r2, #0
 8000b12:	6062      	str	r2, [r4, #4]
 8000b14:	04d9      	lsls	r1, r3, #19
 8000b16:	6922      	ldr	r2, [r4, #16]
 8000b18:	6022      	str	r2, [r4, #0]
 8000b1a:	d504      	bpl.n	8000b26 <__sflush_r+0x7e>
 8000b1c:	1c42      	adds	r2, r0, #1
 8000b1e:	d101      	bne.n	8000b24 <__sflush_r+0x7c>
 8000b20:	682b      	ldr	r3, [r5, #0]
 8000b22:	b903      	cbnz	r3, 8000b26 <__sflush_r+0x7e>
 8000b24:	6560      	str	r0, [r4, #84]	; 0x54
 8000b26:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b28:	602f      	str	r7, [r5, #0]
 8000b2a:	2900      	cmp	r1, #0
 8000b2c:	d0c9      	beq.n	8000ac2 <__sflush_r+0x1a>
 8000b2e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000b32:	4299      	cmp	r1, r3
 8000b34:	d002      	beq.n	8000b3c <__sflush_r+0x94>
 8000b36:	4628      	mov	r0, r5
 8000b38:	f7ff febe 	bl	80008b8 <_free_r>
 8000b3c:	2000      	movs	r0, #0
 8000b3e:	6360      	str	r0, [r4, #52]	; 0x34
 8000b40:	e7c0      	b.n	8000ac4 <__sflush_r+0x1c>
 8000b42:	2301      	movs	r3, #1
 8000b44:	4628      	mov	r0, r5
 8000b46:	47b0      	blx	r6
 8000b48:	1c41      	adds	r1, r0, #1
 8000b4a:	d1c8      	bne.n	8000ade <__sflush_r+0x36>
 8000b4c:	682b      	ldr	r3, [r5, #0]
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	d0c5      	beq.n	8000ade <__sflush_r+0x36>
 8000b52:	2b1d      	cmp	r3, #29
 8000b54:	d001      	beq.n	8000b5a <__sflush_r+0xb2>
 8000b56:	2b16      	cmp	r3, #22
 8000b58:	d101      	bne.n	8000b5e <__sflush_r+0xb6>
 8000b5a:	602f      	str	r7, [r5, #0]
 8000b5c:	e7b1      	b.n	8000ac2 <__sflush_r+0x1a>
 8000b5e:	89a3      	ldrh	r3, [r4, #12]
 8000b60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b64:	81a3      	strh	r3, [r4, #12]
 8000b66:	e7ad      	b.n	8000ac4 <__sflush_r+0x1c>
 8000b68:	690f      	ldr	r7, [r1, #16]
 8000b6a:	2f00      	cmp	r7, #0
 8000b6c:	d0a9      	beq.n	8000ac2 <__sflush_r+0x1a>
 8000b6e:	0793      	lsls	r3, r2, #30
 8000b70:	680e      	ldr	r6, [r1, #0]
 8000b72:	bf08      	it	eq
 8000b74:	694b      	ldreq	r3, [r1, #20]
 8000b76:	600f      	str	r7, [r1, #0]
 8000b78:	bf18      	it	ne
 8000b7a:	2300      	movne	r3, #0
 8000b7c:	eba6 0807 	sub.w	r8, r6, r7
 8000b80:	608b      	str	r3, [r1, #8]
 8000b82:	f1b8 0f00 	cmp.w	r8, #0
 8000b86:	dd9c      	ble.n	8000ac2 <__sflush_r+0x1a>
 8000b88:	6a21      	ldr	r1, [r4, #32]
 8000b8a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b8c:	4643      	mov	r3, r8
 8000b8e:	463a      	mov	r2, r7
 8000b90:	4628      	mov	r0, r5
 8000b92:	47b0      	blx	r6
 8000b94:	2800      	cmp	r0, #0
 8000b96:	dc06      	bgt.n	8000ba6 <__sflush_r+0xfe>
 8000b98:	89a3      	ldrh	r3, [r4, #12]
 8000b9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b9e:	81a3      	strh	r3, [r4, #12]
 8000ba0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ba4:	e78e      	b.n	8000ac4 <__sflush_r+0x1c>
 8000ba6:	4407      	add	r7, r0
 8000ba8:	eba8 0800 	sub.w	r8, r8, r0
 8000bac:	e7e9      	b.n	8000b82 <__sflush_r+0xda>
 8000bae:	bf00      	nop
 8000bb0:	dfbffffe 	.word	0xdfbffffe

08000bb4 <_fflush_r>:
 8000bb4:	b538      	push	{r3, r4, r5, lr}
 8000bb6:	690b      	ldr	r3, [r1, #16]
 8000bb8:	4605      	mov	r5, r0
 8000bba:	460c      	mov	r4, r1
 8000bbc:	b913      	cbnz	r3, 8000bc4 <_fflush_r+0x10>
 8000bbe:	2500      	movs	r5, #0
 8000bc0:	4628      	mov	r0, r5
 8000bc2:	bd38      	pop	{r3, r4, r5, pc}
 8000bc4:	b118      	cbz	r0, 8000bce <_fflush_r+0x1a>
 8000bc6:	6a03      	ldr	r3, [r0, #32]
 8000bc8:	b90b      	cbnz	r3, 8000bce <_fflush_r+0x1a>
 8000bca:	f7ff fc8f 	bl	80004ec <__sinit>
 8000bce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d0f3      	beq.n	8000bbe <_fflush_r+0xa>
 8000bd6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000bd8:	07d0      	lsls	r0, r2, #31
 8000bda:	d404      	bmi.n	8000be6 <_fflush_r+0x32>
 8000bdc:	0599      	lsls	r1, r3, #22
 8000bde:	d402      	bmi.n	8000be6 <_fflush_r+0x32>
 8000be0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000be2:	f7ff fe66 	bl	80008b2 <__retarget_lock_acquire_recursive>
 8000be6:	4628      	mov	r0, r5
 8000be8:	4621      	mov	r1, r4
 8000bea:	f7ff ff5d 	bl	8000aa8 <__sflush_r>
 8000bee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bf0:	07da      	lsls	r2, r3, #31
 8000bf2:	4605      	mov	r5, r0
 8000bf4:	d4e4      	bmi.n	8000bc0 <_fflush_r+0xc>
 8000bf6:	89a3      	ldrh	r3, [r4, #12]
 8000bf8:	059b      	lsls	r3, r3, #22
 8000bfa:	d4e1      	bmi.n	8000bc0 <_fflush_r+0xc>
 8000bfc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bfe:	f7ff fe59 	bl	80008b4 <__retarget_lock_release_recursive>
 8000c02:	e7dd      	b.n	8000bc0 <_fflush_r+0xc>

08000c04 <__swhatbuf_r>:
 8000c04:	b570      	push	{r4, r5, r6, lr}
 8000c06:	460c      	mov	r4, r1
 8000c08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c0c:	2900      	cmp	r1, #0
 8000c0e:	b096      	sub	sp, #88	; 0x58
 8000c10:	4615      	mov	r5, r2
 8000c12:	461e      	mov	r6, r3
 8000c14:	da0d      	bge.n	8000c32 <__swhatbuf_r+0x2e>
 8000c16:	89a3      	ldrh	r3, [r4, #12]
 8000c18:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000c1c:	f04f 0100 	mov.w	r1, #0
 8000c20:	bf0c      	ite	eq
 8000c22:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000c26:	2340      	movne	r3, #64	; 0x40
 8000c28:	2000      	movs	r0, #0
 8000c2a:	6031      	str	r1, [r6, #0]
 8000c2c:	602b      	str	r3, [r5, #0]
 8000c2e:	b016      	add	sp, #88	; 0x58
 8000c30:	bd70      	pop	{r4, r5, r6, pc}
 8000c32:	466a      	mov	r2, sp
 8000c34:	f000 f848 	bl	8000cc8 <_fstat_r>
 8000c38:	2800      	cmp	r0, #0
 8000c3a:	dbec      	blt.n	8000c16 <__swhatbuf_r+0x12>
 8000c3c:	9901      	ldr	r1, [sp, #4]
 8000c3e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000c42:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000c46:	4259      	negs	r1, r3
 8000c48:	4159      	adcs	r1, r3
 8000c4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c4e:	e7eb      	b.n	8000c28 <__swhatbuf_r+0x24>

08000c50 <__smakebuf_r>:
 8000c50:	898b      	ldrh	r3, [r1, #12]
 8000c52:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c54:	079d      	lsls	r5, r3, #30
 8000c56:	4606      	mov	r6, r0
 8000c58:	460c      	mov	r4, r1
 8000c5a:	d507      	bpl.n	8000c6c <__smakebuf_r+0x1c>
 8000c5c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c60:	6023      	str	r3, [r4, #0]
 8000c62:	6123      	str	r3, [r4, #16]
 8000c64:	2301      	movs	r3, #1
 8000c66:	6163      	str	r3, [r4, #20]
 8000c68:	b002      	add	sp, #8
 8000c6a:	bd70      	pop	{r4, r5, r6, pc}
 8000c6c:	ab01      	add	r3, sp, #4
 8000c6e:	466a      	mov	r2, sp
 8000c70:	f7ff ffc8 	bl	8000c04 <__swhatbuf_r>
 8000c74:	9900      	ldr	r1, [sp, #0]
 8000c76:	4605      	mov	r5, r0
 8000c78:	4630      	mov	r0, r6
 8000c7a:	f7ff fe89 	bl	8000990 <_malloc_r>
 8000c7e:	b948      	cbnz	r0, 8000c94 <__smakebuf_r+0x44>
 8000c80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c84:	059a      	lsls	r2, r3, #22
 8000c86:	d4ef      	bmi.n	8000c68 <__smakebuf_r+0x18>
 8000c88:	f023 0303 	bic.w	r3, r3, #3
 8000c8c:	f043 0302 	orr.w	r3, r3, #2
 8000c90:	81a3      	strh	r3, [r4, #12]
 8000c92:	e7e3      	b.n	8000c5c <__smakebuf_r+0xc>
 8000c94:	89a3      	ldrh	r3, [r4, #12]
 8000c96:	6020      	str	r0, [r4, #0]
 8000c98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c9c:	81a3      	strh	r3, [r4, #12]
 8000c9e:	9b00      	ldr	r3, [sp, #0]
 8000ca0:	6163      	str	r3, [r4, #20]
 8000ca2:	9b01      	ldr	r3, [sp, #4]
 8000ca4:	6120      	str	r0, [r4, #16]
 8000ca6:	b15b      	cbz	r3, 8000cc0 <__smakebuf_r+0x70>
 8000ca8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cac:	4630      	mov	r0, r6
 8000cae:	f000 f81d 	bl	8000cec <_isatty_r>
 8000cb2:	b128      	cbz	r0, 8000cc0 <__smakebuf_r+0x70>
 8000cb4:	89a3      	ldrh	r3, [r4, #12]
 8000cb6:	f023 0303 	bic.w	r3, r3, #3
 8000cba:	f043 0301 	orr.w	r3, r3, #1
 8000cbe:	81a3      	strh	r3, [r4, #12]
 8000cc0:	89a3      	ldrh	r3, [r4, #12]
 8000cc2:	431d      	orrs	r5, r3
 8000cc4:	81a5      	strh	r5, [r4, #12]
 8000cc6:	e7cf      	b.n	8000c68 <__smakebuf_r+0x18>

08000cc8 <_fstat_r>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	4d07      	ldr	r5, [pc, #28]	; (8000ce8 <_fstat_r+0x20>)
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	4608      	mov	r0, r1
 8000cd2:	4611      	mov	r1, r2
 8000cd4:	602b      	str	r3, [r5, #0]
 8000cd6:	f7ff faf4 	bl	80002c2 <_fstat>
 8000cda:	1c43      	adds	r3, r0, #1
 8000cdc:	d102      	bne.n	8000ce4 <_fstat_r+0x1c>
 8000cde:	682b      	ldr	r3, [r5, #0]
 8000ce0:	b103      	cbz	r3, 8000ce4 <_fstat_r+0x1c>
 8000ce2:	6023      	str	r3, [r4, #0]
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop
 8000ce8:	200001b8 	.word	0x200001b8

08000cec <_isatty_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	4d06      	ldr	r5, [pc, #24]	; (8000d08 <_isatty_r+0x1c>)
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	4608      	mov	r0, r1
 8000cf6:	602b      	str	r3, [r5, #0]
 8000cf8:	f7ff faf3 	bl	80002e2 <_isatty>
 8000cfc:	1c43      	adds	r3, r0, #1
 8000cfe:	d102      	bne.n	8000d06 <_isatty_r+0x1a>
 8000d00:	682b      	ldr	r3, [r5, #0]
 8000d02:	b103      	cbz	r3, 8000d06 <_isatty_r+0x1a>
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	bd38      	pop	{r3, r4, r5, pc}
 8000d08:	200001b8 	.word	0x200001b8

08000d0c <_sbrk_r>:
 8000d0c:	b538      	push	{r3, r4, r5, lr}
 8000d0e:	4d06      	ldr	r5, [pc, #24]	; (8000d28 <_sbrk_r+0x1c>)
 8000d10:	2300      	movs	r3, #0
 8000d12:	4604      	mov	r4, r0
 8000d14:	4608      	mov	r0, r1
 8000d16:	602b      	str	r3, [r5, #0]
 8000d18:	f7ff fafc 	bl	8000314 <_sbrk>
 8000d1c:	1c43      	adds	r3, r0, #1
 8000d1e:	d102      	bne.n	8000d26 <_sbrk_r+0x1a>
 8000d20:	682b      	ldr	r3, [r5, #0]
 8000d22:	b103      	cbz	r3, 8000d26 <_sbrk_r+0x1a>
 8000d24:	6023      	str	r3, [r4, #0]
 8000d26:	bd38      	pop	{r3, r4, r5, pc}
 8000d28:	200001b8 	.word	0x200001b8

08000d2c <_init>:
 8000d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2e:	bf00      	nop
 8000d30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d32:	bc08      	pop	{r3}
 8000d34:	469e      	mov	lr, r3
 8000d36:	4770      	bx	lr

08000d38 <_fini>:
 8000d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d3a:	bf00      	nop
 8000d3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d3e:	bc08      	pop	{r3}
 8000d40:	469e      	mov	lr, r3
 8000d42:	4770      	bx	lr
